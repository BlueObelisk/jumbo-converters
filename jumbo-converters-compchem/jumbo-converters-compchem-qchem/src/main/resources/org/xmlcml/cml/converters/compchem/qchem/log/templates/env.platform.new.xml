<template id="qchem.platform.new"
  repeat="*"
  name="qchem.platform.new"
  pattern="\s*Q-Chem [\d\.]+ for .+"      offset="0"
  endPattern=".+"   endOffset="0" >

  <comment class="example.input" id="qchem.platform.new">
 Q-Chem 4.2.2 for Intel X86 EM64T Linux
  </comment>

  <record id="r1">\s*{A,cc:program} {A,cc:programVersion} for {X,cc:programPlatform}\W+</record>

  <transform process="pullup" xpath=".//cml:list/cml:scalar[ 
                     @dictRef='cc:program'  or
                     @dictRef='cc:programVersion' or
                     @dictRef='cc:programPlatform'
    ]" />
  <transform process="pullup" xpath=".//cml:list/cml:scalar[ 
                     @dictRef='cc:program'  or
                     @dictRef='cc:programVersion' or
                     @dictRef='cc:programPlatform'
    ]" />
  <transform process="createWrapperParameter" xpath="./cml:scalar[
                     @dictRef='cc:program'  or
                     @dictRef='cc:programVersion' or
                     @dictRef='cc:programPlatform'
    ]" />

  <!--  delete empty lists -->
  <transform process="delete" xpath=".//cml:list[count(*)=0]" />
  <transform process="delete" xpath=".//cml:list[count(*)=0]" />


  <comment class="example.output" id="qchem.platform.new">
    <module cmlx:templateRef="qchem.platform.new" xmlns="http://www.xml-cml.org/schema" xmlns:cmlx="http://www.xml-cml.org/schema/cmlx">
      <parameter dictRef="cc:program">
          <scalar dataType="xsd:string">Q-Chem</scalar>
      </parameter>
      <parameter dictRef="cc:programVersion">
          <scalar dataType="xsd:string">4.2.2</scalar>
      </parameter>
      <parameter dictRef="cc:programPlatform">
          <scalar dataType="xsd:string">Intel X86 EM64T Linux</scalar>
      </parameter>
    </module>
  </comment>

</template>
