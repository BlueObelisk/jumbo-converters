<template id="init.01.inputcard"
  name="Input"
  repeat="*"
  newline="$"
  pattern="\s*EXECUTION OF GAMESS BEGUN.*$\s*$\s*ECHO OF THE FIRST FEW.*"
  endPattern="\s*">

  <comment class="example.input" id="init.01.inputcard.1">
 EXECUTION OF GAMESS BEGUN Fri Jul 11 15:57:49 2014

            ECHO OF THE FIRST FEW INPUT CARDS -
 INPUT CARD> $BASIS GBASIS=N31 NGAUSS=6 $END
 INPUT CARD> $CONTRL SCFTYP=RHF RUNTYP=OPTIMIZE DFTTYP=B3LYP ICHARG=0 MULT=1 $END
 INPUT CARD> $STATPT OPTTOL=0.0001 NSTEP=20 $END
 INPUT CARD>
 INPUT CARD> $DATA
 INPUT CARD>methane B3LYP/6-31G OPT
 INPUT CARD>C1
 INPUT CARD>C      6.0      0.0000000000   -0.0000000000    0.0000000000
 INPUT CARD>H      1.0      0.0000000000   -0.8900000000   -0.6293000000
 INPUT CARD>H      1.0      0.0000000000    0.8900000000   -0.6293000000
 INPUT CARD>H      1.0     -0.8900000000   -0.0000000000    0.6293000000
 INPUT CARD>H      1.0      0.8900000000   -0.0000000000    0.6293000000
 INPUT CARD> $END
 INPUT CARD>
 INPUT CARD>
    1000000 WORDS OF MEMORY AVAILABLE
  </comment>

  <record  id="ex">\s*EXECUTION OF GAMESS BEGUN {X,x:runDate}\s*</record>
  <record repeat="2" />
  <record id="inputcard" repeat="*">\s*INPUT CARD&gt;{X,m:inputCard}</record>
  <record id="memAvail" repeat="*">\s*{I,m:MemoryAvailable}\s*WORDS OF MEMORY AVAILABLE\s*</record>
  
  <transform process="createDate" dictRef="cc:runDate" xpath=".//cml:scalar[@dictRef='x:runDate']" />

<!--   <transform process="createDate" format="EEE MMM d HH:mm:ss yyyy" dictRef="cc:run.date" 
             xpath=".//cml:scalar[@dictRef='x:run.date']" /> -->

  <transform process="addDictRef" value="m:InputCards" xpath=".//cml:list[@cmlx:templateRef='inputcard']" />
  <transform process="addUnits" value="nonSi:words" xpath=".//cml:scalar[@dictRef='m:MemoryAvailable']" />


  <transform process="createWrapperParameter" xpath=".//cml:scalar[@dictRef='cc:runDate']" />
  <transform process="createWrapperParameter" xpath=".//cml:list[@dictRef='m:InputCards']" />
  <transform process="createWrapperParameter" xpath=".//cml:scalar[@dictRef='m:MemoryAvailable']" />

  <transform process="pullup" xpath=".//cml:parameter[@dictRef='cc:runDate' or @dictRef='m:MemoryAvailable' ]" />


  <!-- Delete empty lists -->
  <transform process="delete" xpath=".//cml:list[count(*)=0]"/>
  <transform process="delete" xpath=".//cml:list[count(*)=0]"/>


  <comment class="example.output" id="init.01.inputcard.1">
    <module cmlx:templateRef="init.01.inputcard" xmlns="http://www.xml-cml.org/schema" xmlns:cmlx="http://www.xml-cml.org/schema/cmlx">

    <parameter dictRef="cc:runDate">
      <scalar dataType="xsd:date">2014-07-11T15:57:49-02:30</scalar>
    </parameter>
    <parameter dictRef="m:InputCards">
      <list cmlx:templateRef="inputcard">
        <scalar dataType="xsd:string" dictRef="m:inputCard">$BASIS GBASIS=N31 NGAUSS=6 $END</scalar>
        <scalar dataType="xsd:string" dictRef="m:inputCard">$CONTRL SCFTYP=RHF RUNTYP=OPTIMIZE DFTTYP=B3LYP ICHARG=0 MULT=1 $END</scalar>
        <scalar dataType="xsd:string" dictRef="m:inputCard">$STATPT OPTTOL=0.0001 NSTEP=20 $END</scalar>
        <scalar dataType="xsd:string" dictRef="m:inputCard" />
        <scalar dataType="xsd:string" dictRef="m:inputCard">$DATA</scalar>
        <scalar dataType="xsd:string" dictRef="m:inputCard">methane B3LYP/6-31G OPT</scalar>
        <scalar dataType="xsd:string" dictRef="m:inputCard">C1</scalar>
        <scalar dataType="xsd:string" dictRef="m:inputCard">C      6.0      0.0000000000   -0.0000000000    0.0000000000</scalar>
        <scalar dataType="xsd:string" dictRef="m:inputCard">H      1.0      0.0000000000   -0.8900000000   -0.6293000000</scalar>
        <scalar dataType="xsd:string" dictRef="m:inputCard">H      1.0      0.0000000000    0.8900000000   -0.6293000000</scalar>
        <scalar dataType="xsd:string" dictRef="m:inputCard">H      1.0     -0.8900000000   -0.0000000000    0.6293000000</scalar>
        <scalar dataType="xsd:string" dictRef="m:inputCard">H      1.0      0.8900000000   -0.0000000000    0.6293000000</scalar>
        <scalar dataType="xsd:string" dictRef="m:inputCard">$END</scalar>
        <scalar dataType="xsd:string" dictRef="m:inputCard" />
        <scalar dataType="xsd:string" dictRef="m:inputCard" />
        </list>
    </parameter>
    <parameter dictRef="m:MemoryAvailable">
      <scalar dataType="xsd:integer" units="nonSi:words">1000000</scalar>
    </parameter>

    </module>
  </comment>

</template>
