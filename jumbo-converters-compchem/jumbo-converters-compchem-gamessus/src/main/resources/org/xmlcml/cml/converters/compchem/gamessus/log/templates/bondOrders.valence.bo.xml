<template id="bondOrders.valence.bo"
  repeat="*"
  name="bond orders"
  pattern="(\s+BOND){1,3}\s*$(\s*ATOM PAIR DIST  ORDER){1,3}\s*"      offset="0"
  endPattern="\s*$"   endOffset="0" >

  <comment class="example.input" id="bondOrder.ch4">
                   BOND                       BOND                       BOND
  ATOM PAIR DIST  ORDER      ATOM PAIR DIST  ORDER      ATOM PAIR DIST  ORDER
    1   2  1.093  0.966        1   3  1.093  0.966        1   4  1.093  0.966
    1   5  1.093  0.966
  </comment>
  <comment class="example.input" id="bondOrder.ch2o2">
                   BOND                       BOND                       BOND
  ATOM PAIR DIST  ORDER      ATOM PAIR DIST  ORDER      ATOM PAIR DIST  ORDER
    1   2  1.208  1.948        1   3  1.342  0.988        1   4  1.080  0.877
    2   3  2.210  0.071        3   5  0.967  0.777
  </comment>
  <comment class="example.input" id="bondOrder.c6h6">
                   BOND                       BOND                       BOND
  ATOM PAIR DIST  ORDER      ATOM PAIR DIST  ORDER      ATOM PAIR DIST  ORDER
    1   2  1.382  1.453        1   4  2.765  0.103        1   6  1.382  1.453
    1   7  1.080  0.934        2   3  1.382  1.453        2   5  2.765  0.103
    2   8  1.080  0.934        3   4  1.382  1.453        3   6  2.765  0.103
    3   9  1.080  0.934        4   5  1.382  1.453        4  10  1.080  0.934
    5   6  1.382  1.453        5  11  1.080  0.934        6  12  1.080  0.934
  </comment>



  <record repeat="2"/>
  <!-- <record id="bondOrder.Valence.unparsed" repeat="2">{X,x:UNPARSED}</record> -->

  <templateList>
    <template id="bondOrders_3col"  repeat="*"
      pattern="(\s+\d+\s+\d+\s+\d+\.\d+\s+\d+\.\d+){3}\s*"
      endPattern=".+">
      <record id='bondOrder' repeat="*">\s*{I,m:atomId1}{I,m:atomId2}{F,m:distance}{F,m:bondOrder}{I,m:atomId1}{I,m:atomId2}{F,m:distance}{F,m:bondOrder}{I,m:atomId1}{I,m:atomId2}{F,m:distance}{F,m:bondOrder}\s*</record>
    </template>
    <template id="bondOrders_2col"  repeat="*"
      pattern="(\s+\d+\s+\d+\s+\d+\.\d+\s+\d+\.\d+){2}\s*"
      endPattern="~">
      <record id='bondOrder' repeat="*">\s*{I,m:atomId1}{I,m:atomId2}{F,m:distance}{F,m:bondOrder}{I,m:atomId1}{I,m:atomId2}{F,m:distance}{F,m:bondOrder}\s*</record>
    </template>
    <template id="bondOrders_1col"  repeat="*"
      pattern="\s+\d+\s+\d+\s+\d+\.\d+\s+\d+\.\d+\s*"
      endPattern="~">
      <record id='bondOrder' repeat="*">\s*{I,m:atomId1}{I,m:atomId2}{F,m:distance}{F,m:bondOrder}\s*</record>
    </template>
  </templateList>

  <transform process="createArray" xpath="." from=".//cml:scalar[@dictRef='m:atomId1']" />
  <transform process="createArray" xpath="." from=".//cml:scalar[@dictRef='m:atomId2']" />
  <transform process="createArray" xpath="." from=".//cml:scalar[@dictRef='m:distance']" />
  <transform process="createArray" xpath="." from=".//cml:scalar[@dictRef='m:bondOrder']" />

  <transform process="addChild" xpath="." elementName="cml:list" dictRef="m:bondorders" />
  <transform process='move' to="./cml:list[@dictRef='m:bondorders']" 
             xpath=".//cml:array[@dictRef='m:atomId1' or @dictRef='m:atomId2' or @dictRef='m:distance' or @dictRef='m:bondOrder'  ]" />
  <transform process="createWrapperProperty" xpath="./cml:list[@dictRef='m:bondorders']" />

  <!-- Delete empty lists and modules -->
  <transform process="delete" xpath=".//cml:list[count(*)=0]"/>
  <transform process="delete" xpath=".//cml:list[count(*)=0]"/>
  <transform process="delete" xpath=".//cml:module[count(*)=0]"/>



  <comment class="example.output" id="bondOrder.ch4">
    <module cmlx:templateRef="bondOrders.valence.bo" xmlns="http://www.xml-cml.org/schema" xmlns:cmlx="http://www.xml-cml.org/schema/cmlx">
      <property dictRef="m:bondorders">
        <list>
          <array dataType="xsd:integer" dictRef="m:atomId1"  size="4">1 1 1 1</array>
          <array dataType="xsd:integer" dictRef="m:atomId2"  size="4">2 3 4 5</array>
          <array dataType="xsd:double" dictRef="m:distance"  size="4">1.093 1.093 1.093 1.093</array>
          <array dataType="xsd:double" dictRef="m:bondOrder" size="4">0.966 0.966 0.966 0.966</array>
        </list>
      </property>
    </module>
  </comment>

  <comment class="example.output" id="bondOrder.ch2o2">
    <module cmlx:templateRef="bondOrders.valence.bo" xmlns="http://www.xml-cml.org/schema" xmlns:cmlx="http://www.xml-cml.org/schema/cmlx">
      <property dictRef="m:bondorders">
        <list>
          <array dataType="xsd:integer" dictRef="m:atomId1"  size="5">1 1 1 2 3</array>
          <array dataType="xsd:integer" dictRef="m:atomId2"  size="5">2 3 4 3 5</array>
          <array dataType="xsd:double" dictRef="m:distance"  size="5">1.208 1.342 1.08 2.21 0.967</array>
          <array dataType="xsd:double" dictRef="m:bondOrder" size="5">1.948 0.988 0.877 0.071 0.777</array>
        </list>
      </property>
    </module>
  </comment>

  <comment class="example.output" id="bondOrder.c6h6">
    <module cmlx:templateRef="bondOrders.valence.bo" xmlns="http://www.xml-cml.org/schema" xmlns:cmlx="http://www.xml-cml.org/schema/cmlx">
      <property dictRef="m:bondorders">
        <list>
          <array dataType="xsd:integer" dictRef="m:atomId1"  size="15">1 1 1 1 2 2 2 3 3 3 4 4 5 5 6</array>
          <array dataType="xsd:integer" dictRef="m:atomId2"  size="15">2 4 6 7 3 5 8 4 6 9 5 10 6 11 12</array>
          <array dataType="xsd:double" dictRef="m:distance"  size="15">1.382 2.765 1.382 1.08 1.382 2.765 1.08 1.382 2.765 1.08 1.382 1.08 1.382 1.08 1.08</array>
          <array dataType="xsd:double" dictRef="m:bondOrder" size="15">1.453 0.103 1.453 0.934 1.453 0.103 0.934 1.453 0.103 0.934 1.453 0.934 1.453 0.934 0.934</array>
        </list>
      </property>
    </module>
  </comment>

</template>
