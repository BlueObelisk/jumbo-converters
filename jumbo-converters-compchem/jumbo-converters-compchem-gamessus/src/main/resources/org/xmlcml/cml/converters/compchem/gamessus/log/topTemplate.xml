<?xml version="1.0" encoding="UTF-8"?>
<!--  this is the top template file for GAMESS-US log files.
It should generally be found in the directory structure
  src/main/resources/org/xmlcml/cml/converters/compchem/gamessus/log
It uses include files from
  src/main/resources/org/xmlcml/cml/converters/compchem/gamessus/log/templates
  (though I am not quite sure why the subdirectories are not explcit here)

The ORDER of the subtemplates may be important. Templates are processed in the order
  in this files and the subtemplates. Some of the files are marked with comments
 -->

<template id='gamessus.log' output="VERBOSE"
  xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
  xmlns:c="http://www.xml-cml.org/dictionary"
  xmlns:m="http://www.xml-cml.org/dictionary/gamessus"
  xmlns:xi="http://www.w3.org/2001/XInclude">
  <templateList>
    <template id="job"
      pattern="\s*-+\s*GAMESS execution script.+\s*-+\s*"
      endPattern="\s*EXECUTION OF GAMESS TERMINATED NORMALLY.+"        endOffset="2"
      newline="$" repeat="*"> 
      <templateList id='main'>

        <!-- START of  module environment -->
          <xi:include href="environ.01.script.xml"/>
          <xi:include href="environ.02.kickoff.xml"/>
          <xi:include href="environ.03.proginfo.xml"/>
        <!-- END of module environment -->


        <!-- START of module initialization -->
          <xi:include href="init.01.inputcard.xml"/>
          <xi:include href="init.02.basis.options.xml"/>
          <xi:include href="init.runTitle.xml"/>
          <xi:include href="init.pointGroup.principalAxis.xml"/>
          <xi:include href="init.inputCoordinates.bohr.xml" />
          <xi:include href="internuclear.distance.matrix.xml"/>
          <!-- TODO: ATOMIC BASIS SET -->
          <xi:include href="init.gridbased.dft.options.xml"/>
          <xi:include href="init.empirical.dispersion.correction.xml" />
          <xi:include href="init.control.options.xml"/>
          <xi:include href="init.system.options.xml"/>
          <xi:include href="init.properties.input.xml" />
          <!-- TODO: INTEGRAL TRANSFORMATION OPTIONS -->
          <!-- TODO: INTEGRAL INPUT OPTIONS -->
          <!-- TODO: THE POINT GROUP IS C1 , NAXIS= 0, ORDER= 1 -->
          <!-- TODO: DIMENSIONS OF THE SYMMETRY SUBSPACES ARE -->
        <!-- END of module initialization -->


        <!-- START of module calculation -->
          <xi:include href="init.stationaryPointLocationRun.xml"/>
          <xi:include href="init.guess.options.xml"/>
          <!-- START of module calculation-step -->
            <xi:include href="coordinates.angstom.xml"/>
            <!-- TODO: MOLECULAR ORBITALS -->
            <xi:include href="energy.components.xml"/>
            <!-- TODO: MULLIKEN AND LOWDIN POPULATION ANALYSES -->
            <xi:include href="bondOrder.valence.xml"/>
            <xi:include href="dipole.moment.xml"/>
            <!-- TODO: GRADIENT (HARTREE/BOHR) -->
          <!-- END of module calculation-step -->
        <!-- END of module calculation -->

        <!-- START of module finalization -->
          <!-- in Geometry Optimization: -->
            <xi:include href="coordinates.angstom.xml"/>
            <!-- TODO: INTERNUCLEAR DISTANCES -->
            <!-- TODO: MOLECULAR ORBITALS -->
            <xi:include href="energy.components.xml"/>
            <!-- TODO: MULLIKEN AND LOWDIN POPULATION ANALYSES -->
            <xi:include href="bondOrder.valence.xml"/>
            <xi:include href="dipole.moment.xml"/>
          <!-- in Frequency (Hessian) calculation: -->
            <xi:include href="freq.energy.gradient.xml"/>
            <xi:include href="freq.forceConstantMatrix.xml" />
            <xi:include href="freq.normalCoordAnalysis.xml" />
        <!-- END of module finalization -->


        <!-- <xi:include href="chunker.temp.xml"/> -->
      </templateList>
    </template>
  </templateList>
  <!--  don't worry if you don't understand all of this. It's almost boilerplate -->
  <!--  Do the grouping after all the main body has been  processed   -->

   <!--  this finds all modules with given templateRef and groups them an all sibligs into a new
   higher level module. Each modules geeedily eats sibling till the next module  -->
<!-- <transform process="group" name="./*[@cmlx:templateRef='gamessusmod']"/> -->

  <!--  labels the first group as the initial one -->
<!-- <transform process="addRole" name="./*[@role='group'][1]" value="initial"/> -->

  <!--  labels the last group as final (typical XPath/XSL construction to get the number of
  the last group -->
<!-- <transform process="addRole" name="./*[@role='group'][count(//*[@role='group'])]" value="final"/> -->

  <!--  labels the new leading group as calculation -->
<!-- <transform process="addRole" name="./*[@role='group']" value="calculation"/> -->

  <!--  and groups it and its siblings not yet working -->
<!-- <transform process="group" name="./*[@role='calculation']"/> -->
</template>
