<template repeat="*"  id="geninfo" name="General Information" 
    pattern="\s*General Information.*$\s+\-+.*" endPattern="\s*">

  <comment class="example.input" id="geninfo">
            General Information
            -------------------
          SCF calculation type: DFT
          Wavefunction type:  closed shell.
          No. of atoms     :    11
          No. of electrons :    96
           Alpha electrons :    48
            Beta electrons :    48
          Charge           :     0
          Spin multiplicity:     1
          Use of symmetry is: on ; symmetry adaption is: on 
          Maximum number of iterations:  30
          AO basis - number of functions:   176
                     number of shells:    70
          A Charge density fitting basis will be used.
          CD basis - number of functions:   395
                     number of shells:   150
          An Exch-Corr fitting basis will be used.
          XC basis - number of functions:   395
                     number of shells:   150
          Convergence on energy requested: 1.00D-06
          Convergence on density requested: 1.00D-05
          Convergence on gradient requested: 5.00D-04
          
  </comment>
  
  <record repeat="2" id="junk"/>
  <templateList>
    <template id="symmetry" repeat="*" pattern="\s*Use of symmetry.*" endPattern=".*">
      <record id="sym">\s*Use of symmetry is: {A,cc:symmetry.used} ; symmetry adaption is: {A,cc:symmetry.adapt}\s*</record>
    </template>
    <template id="used" repeat="*" pattern="\s*An? .* will be used.*" endPattern=".*">
      <record id="used">\s*An? {X,n:used}\swill be used\.\s*</record>
    </template>
    <template id="basis" repeat="*" pattern="\s*.*basis \- number.*$\s*\number.*.*" endPattern=".*">
      <record id="used">\s*{A,n:basis}\s\-\snumber of functions:{I,n:nfunc}\s*</record>
      <record id="used1">\s*number of shells:{I,n:nshell}\s*</record>
    </template>
    <template id="colon" repeat="*" pattern=".*\:.*\.\s*" endPattern=".*">
      <record id="nv">\s*{X,n:name}:{X,n:value}\s*\.\s*</record>
    </template>
    <template id="colon1" repeat="*" pattern=".*\:.*" endPattern=".*">
      <record id="nv">\s*{X,n:name}:{X,n:value}\s*</record>
    </template>
  </templateList>

  <transform process="pullup" xpath=".//cml:scalar" repeat="3"/>
  <transform process="delete" xpath=".//cml:module[@cmlx:templateRef='colon' or @cmlx:templateRef='used' or @cmlx:templateRef='symmetry']"/>
  <transform process="createNameValue" xpath="." name="./*[@dictRef='n:name']" 
     value="./*[@dictRef='n:value']" />
  <transform process="setValue" xpath=".//@dictRef[.='n:SCF calculation type']" value="cc:scf.type"/>
  <transform process="setValue" xpath=".//@dictRef[.='n:Wavefunction type']" value="cc:wavefunction.type"/>
  <transform process="setValue" xpath=".//@dictRef[.='n:No. of atoms']" value="cc:atom.count"/>
  <transform process="setDataType" xpath=".//cml:scalar[@dictRef='cc:atom.count']" value="xsd:integer"/>
  <transform process="setValue" xpath=".//@dictRef[.='n:No. of electrons']" value="cc:electron.count"/>
  <transform process="setDataType" xpath=".//cml:scalar[@dictRef='cc:electron.count']" value="xsd:integer"/>
  <transform process="setValue" xpath=".//@dictRef[.='n:Alpha electrons']" value="cc:alphae"/>
  <transform process="setDataType" xpath=".//cml:scalar[@dictRef='cc:alphae']" value="xsd:integer"/>
  <transform process="setValue" xpath=".//@dictRef[.='n:Beta electrons']" value="cc:betae"/>
  <transform process="setDataType" xpath=".//cml:scalar[@dictRef='cc:betae']" value="xsd:integer"/>
  <transform process="setValue" xpath=".//@dictRef[.='n:Charge']" value="cc:formalCharge"/>
  <transform process="setDataType" xpath=".//cml:scalar[@dictRef='cc:formalCharge']" value="xsd:integer"/>
  <transform process="setValue" xpath=".//@dictRef[.='n:Maximum number of iterations']" value="cc:maxiter"/>
  <transform process="setDataType" xpath=".//cml:scalar[@dictRef='cc:maxiter']" value="xsd:integer"/>
  <transform process="setValue" xpath=".//@dictRef[.='n:AO basis - number of functions']" value="cc:ao.nfunctions"/>
  <transform process="setDataType" xpath=".//cml:scalar[@dictRef='cc:ao.nfunctions']" value="xsd:integer"/>
  <transform process="setValue" xpath=".//@dictRef[.='n:CD basis - number of functions']" value="cc:cd.nfunctions"/>
  <transform process="setDataType" xpath=".//cml:scalar[@dictRef='cc:cd.nfunctions']" value="xsd:integer"/>
  <transform process="setValue" xpath=".//@dictRef[.='n:XC basis - number of functions']" value="cc:xc.nfunctions"/>
  <transform process="setDataType" xpath=".//cml:scalar[@dictRef='cc:xc.nfunctions']" value="xsd:integer"/>
  <transform process="setValue" xpath=".//@dictRef[.='n:Spin multiplicity']" value="cc:spinMultiplicity"/>
  <transform process="setDataType" xpath=".//cml:scalar[@dictRef='cc:spinMultiplicity']" value="xsd:integer"/>
  <transform process="setValue" xpath=".//@dictRef[.='n:number of shells']" value="cc:shell.count"/>
  <transform process="setDataType" xpath=".//cml:scalar[@dictRef='cc:shell.count']" value="xsd:integer"/>
  <transform process="setValue" xpath=".//@dictRef[.='n:used']" value="cc:fittingbasis"/>
  <transform process="setValue" xpath=".//@dictRef[.='n:Convergence on energy requested']"
       value="cc:energy.convergence"/>
  <transform process="setDataType" xpath=".//cml:scalar[@dictRef='cc:energy.convergence']" value="xsd:double"/>
  <transform process="setValue" xpath=".//@dictRef[.='n:Convergence on density requested']"
       value="cc:density.convergence"/>
  <transform process="setDataType" xpath=".//cml:scalar[@dictRef='cc:density.convergence']" value="xsd:double"/>
  <transform process="setValue" xpath=".//@dictRef[.='n:Convergence on gradient requested']"
       value="cc:gradient.convergence"/>
  <transform process="setDataType" xpath=".//cml:scalar[@dictRef='cc:gradient.convergence']" value="xsd:double"/>
  
  <transform process="delete" xpath=".//cml:module[@cmlx:templateRef='colon1']"/>  
     
  
  <comment class="example.output" id="geninfo">
    <module cmlx:templateRef="geninfo" xmlns="http://www.xml-cml.org/schema" xmlns:cmlx="http://www.xml-cml.org/schema/cmlx">
      <scalar dictRef="cc:scf.type" dataType="xsd:string">DFT</scalar>
      <scalar dictRef="cc:wavefunction.type" dataType="xsd:string">closed shell</scalar>
      <scalar dictRef="cc:atom.count" dataType="xsd:integer">11</scalar>
      <scalar dictRef="cc:electron.count" dataType="xsd:integer">96</scalar>
      <scalar dictRef="cc:alphae" dataType="xsd:integer">48</scalar>
      <scalar dictRef="cc:betae" dataType="xsd:integer">48</scalar>
      <scalar dictRef="cc:formalCharge" dataType="xsd:integer">0</scalar>
      <scalar dictRef="cc:spinMultiplicity" dataType="xsd:integer">1</scalar>
      <scalar dataType="xsd:string" dictRef="cc:symmetry.used">on</scalar>
      <scalar dataType="xsd:string" dictRef="cc:symmetry.adapt">on</scalar>
      <scalar dictRef="cc:maxiter" dataType="xsd:integer">30</scalar>
      <scalar dictRef="cc:ao.nfunctions" dataType="xsd:integer">176</scalar>
      <scalar dictRef="cc:shell.count" dataType="xsd:integer">70</scalar>
      <scalar dataType="xsd:string" dictRef="cc:fittingbasis">Charge density fitting basis</scalar>
      <scalar dictRef="cc:cd.nfunctions" dataType="xsd:integer">395</scalar>
      <scalar dictRef="cc:shell.count" dataType="xsd:integer">150</scalar>
      <scalar dataType="xsd:string" dictRef="cc:fittingbasis">Exch-Corr fitting basis</scalar>
      <scalar dictRef="cc:xc.nfunctions" dataType="xsd:integer">395</scalar>
      <scalar dictRef="cc:shell.count" dataType="xsd:integer">150</scalar>
      <scalar dictRef="cc:energy.convergence" dataType="xsd:double">1.0E-6</scalar>
      <scalar dictRef="cc:density.convergence" dataType="xsd:double">1.0E-5</scalar>
      <scalar dictRef="cc:gradient.convergence" dataType="xsd:double">5.0E-4</scalar>
    </module>
  </comment>

</template>
