<template repeat="*"  id="nwpw.converting" name="NWPW converting wavefunctions" 
  pattern="\s*\+\s+converting wavefunctions.*" 
  newline="$" endPattern="\s*pspw.*">

    <comment class="example.input" id="pspw.converting">
 + converting wavefunctions from pspw format to band format
 filename converted    : band.movecs                   
 pspw filename moved to: band.movecs.pspw              
</comment>
  <record id="converting">\s*\+\s+converting wavefunctions from {X,n:format} format to {X,n:format} format\s*</record>
  <record id="fromfile">\s*filename converted\s*\:\s*{X,cc:filename}\s*</record>
  <record id="tofile">\s*pspw filename moved to\:\s*{X,cc:filename}\s*</record>
  
  <transform process="pullupSingleton" xpath="./cml:list"/>
  
    <comment class="example.output" id="pspw.converting">
<module cmlx:templateRef="nwpw.converting" xmlns="http://www.xml-cml.org/schema" xmlns:cmlx="http://www.xml-cml.org/schema/cmlx">
  <list cmlx:templateRef="converting">
    <scalar dataType="xsd:string" dictRef="n:format">pspw</scalar>
    <scalar dataType="xsd:string" dictRef="n:format">band</scalar>
  </list>
  <scalar dataType="xsd:string" dictRef="cc:filename" cmlx:templateRef="fromfile">band.movecs</scalar>
  <scalar dataType="xsd:string" dictRef="cc:filename" cmlx:templateRef="tofile">band.movecs.pspw</scalar>
</module>
          </comment>

</template>
