<transformList>
  
  <!-- build calculation module -->

<!-- ================ calculation ================================= -->

  <transform process="addChild" xpath="//cml:module[@id='job1']" elementName="cml:module" id="calculation"/>
  <transform process="addDictRef" xpath="//cml:module[@id='calculation']" value="cc:calculation"/>
  
  <transform process="addChild" xpath="//cml:module[@id='calculation']" elementName="cml:propertyList" />
  <transform process="addChild" xpath="//cml:module[@id='calculation']" elementName="cml:module"
   id="steps" dictRef="cc:stepList"/>
  <transform process="move" xpath="//cml:module[@dictRef='cc:optstep']" 
    toXpath="//cml:module[@dictRef='cc:stepList']"/>
  
  
  
  <!-- move modules to calculation -->
  
  <transform process="createWrapperProperty" 
     xpath="//cml:module[@id='calculation']/cml:propertyList/*" />

  <!--  and molecule -->  
  <!-- 
    <transform process="move" xpath=".//cml:molecule[@id='molgeom']" 
        toXpath=".//cml:module[@id='initialization']"/> 
  -->
  
  <!--  tidy rest -->
  <transform process="delete" xpath=".//cml:module[@cmlx:templateRef='foobar']"/>
  <transform process="addChild" xpath=".//cml:module[@id='calculation']"
     elementName="cml:module" id="calculation.userDefined" dictRef="cc:userDefinedModule"/>
  <transform process="move" xpath=".//cml:module[
       @cmlx:templateRef='convergenceiter' 
    or @cmlx:templateRef='nonvarinitener' 
    ]" 
     toXpath="//cml:module[@id='calculation.userDefined']"/>


     
</transformList>
