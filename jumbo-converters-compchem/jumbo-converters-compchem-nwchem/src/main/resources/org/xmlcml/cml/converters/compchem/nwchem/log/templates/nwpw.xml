
<template repeat="*"  id="nwpw" name="nwpw" 
  pattern="\s*\*+\s*$\s*\*\s+\*\s*$\s*\*\s+NWPW (PSPW|BAND) Calculation\s+\*\s*" 
  newline="$" endPattern="\s*$\s*$\s*$\s*$\s*"
  xmlns:xi="http://www.w3.org/2001/XInclude"
  >
  
  <comment class="example.input" id="nwpw">

          ****************************************************
          *                                                  *
          *               NWPW PSPW Calculation              *
          *                                                  *
          *  [ (Grassman/Stiefel manifold implementation) ]  *
          *                                                  *
          *      [ NorthWest Chemistry implementation ]      *
          *                                                  *
          *            version #5.10   06/12/02              *
          *                                                  *
          *    This code was developed by Eric J. Bylaska,   *
          *    and was based upon algorithms and code        *
          *    developed by the group of Prof. John H. Weare *
          *                                                  *
          ****************************************************
     >>>  JOB STARTED       AT Fri Aug  6 14:00:17 2010  &lt;&lt;&lt;
          ================ input data ========================
  library name resolved from: compiled reference
  NWCHEM_NWPW_LIBRARY set to: &lt;/home/d3y133/nwchem-releases/nwchem-6.0-gfortran/src/nwpw/libraryps/>
 Generating 1d pseudopotential for Ga  

 Generated formatted_filename: ./Ga.vpp
  library name resolved from: compiled reference
  NWCHEM_NWPW_LIBRARY set to: &lt;/home/d3y133/nwchem-releases/nwchem-6.0-gfortran/src/nwpw/libraryps/>
 Generating 1d pseudopotential for N   

 Generated formatted_filename: ./N.vpp
 random planewave guess, initial psi:band.movecs                   
 -   spin, nalpha, nbeta:                    1                   16                    0

 input psi filename:./band.movecs
 Warning - Gram-Schmidt being performed on psi:   16.0000000000000        10.8210191970224        16.0000000000000        5.17898080297764     

 number of processors used:         4
 processor grid           :   4 x   1
 parallel mapping         :      slab
 parallel mapping         :  balanced

 options:
      boundary conditions  = periodic    (version3)
      electron spin        = restricted
      exchange-correlation = LDA (Vosko et al) parameterization

 elements involved in the cluster:
      1: Ga    core charge:  3.0000  lmax=  2
             comment    : Hamann pseudopotential
             pseudpotential type            :   0
             highest angular component      :   2
             local potential used           :   2
             number of non-local projections:   4
             cutoff =   1.128   1.506   2.118

      2: N     core charge:  5.0000  lmax=  2
             comment    : Hamann pseudopotential
             pseudpotential type            :   0
             highest angular component      :   2
             local potential used           :   2
             number of non-local projections:   4
             cutoff =   0.700   0.700   0.700


 total charge:   0.000

 atomic composition:
     Ga  :  4     N   :  4

 number of electrons: spin up=    16 (  16 per task)  down=    16 (  16 per task) (fourier space)
 number of orbitals : spin up=    16 (  16 per task)  down=    16 (  16 per task) (fourier space)

 supercell:
      cell_name:  cell_default                  
      lattice:    a1=&lt;   5.920   0.000   0.000 >
                  a2=&lt;   0.000  10.255   0.000 >
                  a3=&lt;   0.000   0.000   9.653 >
      reciprocal: b1=&lt;   1.061   0.000   0.000 >
                  b2=&lt;   0.000   0.613   0.000 >
                  b3=&lt;   0.000   0.000   0.651 >
      lattice:    a=       5.920 b=     10.255 c=       9.653
                  alpha=  90.000 beta=  90.000 gamma=  90.000
                  omega=       586.0

      density cutoff= 10.000  fft= 16x 16x 16(      446 waves      112 per task)
      wavefnc cutoff= 10.000  fft= 16x 16x 16(      446 waves      112 per task)
      ewald summation: cut radius=    1.88  and  8
                        madelung= 1.58898112

 technical parameters:
      time step=      5.80     ficticious mass=  400000.0
      tolerance=.100E-06 (energy)   0.100E-06 (density)
      maximum iterations =    1000 (   10 inner  100 outer )





</comment>
  <templateList>
    <xi:include href="nwpw.banner.xml"/>
    <xi:include href="nwpw.library.xml"/>
    <xi:include href="nwpw.generated.xml"/>
    <xi:include href="nwpw.inputdata.xml"/>
    <xi:include href="nwpw.job.xml"/>
    <xi:include href="nwpw.elems1.xml"/>
    <xi:include href="nwpw.elems.xml"/>
    <xi:include href="nwpw.converting.xml"/>
    <xi:include href="nwpw.random.xml"/>
    <xi:include href="nwpw.psifile.xml"/>
    <xi:include href="nwpw.gramschmidt.xml"/>
    <xi:include href="nwpw.comp.xml"/>
    <xi:include href="nwpw.options.xml"/>
    <xi:include href="nwpw.totalcharge.xml"/>
    <xi:include href="nwpw.atomcompos.xml"/>
    <xi:include href="nwpw.technical.xml"/>
    <xi:include href="nwpw.nelectron.xml"/>
    <xi:include href="nwpw.brillouin.xml"/>
    <xi:include href="nwpw.supercell.xml"/>
    <xi:include href="nwpw.supercell1.xml"/>
    <xi:include href="nwpw.lattice.xml"/>
    <xi:include href="nwpw.ewald.xml"/>
    <xi:include href="nwpw.densitycut.xml"/>
  </templateList>  
  <record repeat="*" id="pspwxxxx">{X,x:x}</record>
  <transform process="pullupSingleton" xpath="./cml:list"/>
  
  <comment class="example.output" id="nwpw">
<module cmlx:templateRef="nwpw" xmlns="http://www.xml-cml.org/schema" xmlns:cmlx="http://www.xml-cml.org/schema/cmlx">
  <module cmlx:lineCount="15" cmlx:templateRef="nwpw.banner">
    <scalar dataType="xsd:string" dictRef="n:pwtype" cmlx:templateRef="type">PSPW</scalar>
    <scalar dataType="xsd:string" dictRef="n:impl" cmlx:templateRef="impl">Grassman/Stiefel manifold implementation</scalar>
    <scalar dataType="xsd:string" dictRef="n:impl" cmlx:templateRef="impl">NorthWest Chemistry implementation</scalar>
    <list cmlx:templateRef="version">
      <scalar dataType="xsd:string" dictRef="cc:version">5.10</scalar>
      <scalar dataType="xsd:string" dictRef="cc:date">06/12/02</scalar>
    </list>
  </module>
  <module cmlx:lineCount="1" cmlx:templateRef="pspw.job">
    <scalar dataType="xsd:string" dictRef="cc:date" cmlx:templateRef="job">Fri Aug 6 14:00:17 2010</scalar>
  </module>
  <module cmlx:lineCount="1" cmlx:templateRef="pspw.inputdata"/>
  <module cmlx:lineCount="3" cmlx:templateRef="pspw.library">
    <scalar dataType="xsd:string" dictRef="n:libname" cmlx:templateRef="libname">compiled reference</scalar>
    <scalar dataType="xsd:string" dictRef="n:filename" cmlx:templateRef="lib">/home/d3y133/nwchem-releases/nwchem-6.0-gfortran/src/nwpw/libraryps/</scalar>
    <scalar dataType="xsd:string" dictRef="x:elementType" cmlx:templateRef="pspot">Ga</scalar>
  </module>
  <module cmlx:lineCount="1" cmlx:templateRef="pspw.generated">
    <list cmlx:templateRef="formatfile">
      <scalar dataType="xsd:string" dictRef="cc:filename">./Ga.vpp</scalar>
    </list>
  </module>
  <module cmlx:lineCount="3" cmlx:templateRef="pspw.library">
    <scalar dataType="xsd:string" dictRef="n:libname" cmlx:templateRef="libname">compiled reference</scalar>
    <scalar dataType="xsd:string" dictRef="n:filename" cmlx:templateRef="lib">/home/d3y133/nwchem-releases/nwchem-6.0-gfortran/src/nwpw/libraryps/</scalar>
    <scalar dataType="xsd:string" dictRef="x:elementType" cmlx:templateRef="pspot">N</scalar>
  </module>
  <module cmlx:lineCount="1" cmlx:templateRef="pspw.generated">
    <list cmlx:templateRef="formatfile">
      <scalar dataType="xsd:string" dictRef="cc:filename">./N.vpp</scalar>
    </list>
  </module>
  <module cmlx:lineCount="2" cmlx:templateRef="pspw.random">
    <scalar dataType="xsd:string" dictRef="n:initpsi" cmlx:templateRef="random">band.movecs</scalar>
    <list cmlx:templateRef="spin">
      <scalar dataType="xsd:integer" dictRef="cc:spin">1</scalar>
      <scalar dataType="xsd:integer" dictRef="cc:nalpha">16</scalar>
      <scalar dataType="xsd:integer" dictRef="cc:nbeta">0</scalar>
    </list>
  </module>
  <module cmlx:lineCount="1" cmlx:templateRef="nwpw.psifile">
    <scalar dataType="xsd:string" dictRef="n:psifile" cmlx:templateRef="psifile">./band.movecs</scalar>
  </module>
  <module cmlx:lineCount="1" cmlx:templateRef="nwpw.gramschmidt">
    <list cmlx:templateRef="gramschmidt">
      <scalar dataType="xsd:double" dictRef="n:psi1">16.0</scalar>
      <scalar dataType="xsd:double" dictRef="n:psi2">10.8210191970224</scalar>
      <scalar dataType="xsd:double" dictRef="n:psi3">16.0</scalar>
      <scalar dataType="xsd:double" dictRef="n:psi4">5.17898080297764</scalar>
    </list>
  </module>
  <module cmlx:lineCount="4" cmlx:templateRef="pspw.comp">
    <scalar dataType="xsd:integer" dictRef="cc:nproc" cmlx:templateRef="nproc">4</scalar>
    <scalar dataType="xsd:string" dictRef="n:procgrid" cmlx:templateRef="grid">4 x 1</scalar>
    <list cmlx:templateRef="map">
      <scalar dataType="xsd:string" dictRef="n:parallelmap">slab</scalar>
      <scalar dataType="xsd:string" dictRef="n:parallelmap">balanced</scalar>
    </list>
  </module>
  <module cmlx:lineCount="4" cmlx:templateRef="pspw.options">
    <scalar dataType="xsd:string" dictRef="n:boundary" cmlx:templateRef="boundary">periodic (version3)</scalar>
    <scalar dataType="xsd:string" dictRef="n:spin" cmlx:templateRef="spin">restricted</scalar>
    <scalar dataType="xsd:string" dictRef="n:xccorr" cmlx:templateRef="xccorr">LDA (Vosko et al) parameterization</scalar>
  </module>
  <module cmlx:lineCount="16" cmlx:templateRef="pspw.elems1">
    <scalar dataType="xsd:string" dictRef="x:xelem" cmlx:templateRef="x">elements involved in the cluster:</scalar>
    <module cmlx:lineCount="7" cmlx:templateRef="atom">
      <list cmlx:templateRef="atom1">
        <list>
          <scalar dataType="xsd:integer" dictRef="x:serial">1</scalar>
          <scalar dataType="xsd:string" dictRef="cmlx:elementType">Ga</scalar>
          <scalar dataType="xsd:double" dictRef="n:corecharge">3.0</scalar>
          <scalar dataType="xsd:integer" dictRef="n:lmax">2</scalar>
        </list>
      </list>
      <list cmlx:templateRef="comment">
        <scalar dataType="xsd:string" dictRef="x:comment">Hamann pseudopotential</scalar>
      </list>
      <list cmlx:templateRef="pspot">
        <scalar dataType="xsd:integer" dictRef="n:pspottype">0</scalar>
      </list>
      <list cmlx:templateRef="hangle">
        <scalar dataType="xsd:integer" dictRef="n:hangularcomp">2</scalar>
      </list>
      <list cmlx:templateRef="local">
        <scalar dataType="xsd:integer" dictRef="n:localpot">2</scalar>
      </list>
      <list cmlx:templateRef="nonlocal">
        <scalar dataType="xsd:integer" dictRef="n:nonlocal">4</scalar>
      </list>
      <list cmlx:templateRef="cutoff">
        <array dataType="xsd:double" size="3" dictRef="n:cutoff">1.128 1.506 2.118</array>
      </list>
    </module>
    <module cmlx:lineCount="7" cmlx:templateRef="atom">
      <list cmlx:templateRef="atom1">
        <list>
          <scalar dataType="xsd:integer" dictRef="x:serial">2</scalar>
          <scalar dataType="xsd:string" dictRef="cmlx:elementType">N</scalar>
          <scalar dataType="xsd:double" dictRef="n:corecharge">5.0</scalar>
          <scalar dataType="xsd:integer" dictRef="n:lmax">2</scalar>
        </list>
      </list>
      <list cmlx:templateRef="comment">
        <scalar dataType="xsd:string" dictRef="x:comment">Hamann pseudopotential</scalar>
      </list>
      <list cmlx:templateRef="pspot">
        <scalar dataType="xsd:integer" dictRef="n:pspottype">0</scalar>
      </list>
      <list cmlx:templateRef="hangle">
        <scalar dataType="xsd:integer" dictRef="n:hangularcomp">2</scalar>
      </list>
      <list cmlx:templateRef="local">
        <scalar dataType="xsd:integer" dictRef="n:localpot">2</scalar>
      </list>
      <list cmlx:templateRef="nonlocal">
        <scalar dataType="xsd:integer" dictRef="n:nonlocal">4</scalar>
      </list>
      <list cmlx:templateRef="cutoff">
        <array dataType="xsd:double" size="3" dictRef="n:cutoff">0.7 0.7 0.7</array>
      </list>
    </module>
  </module>
  <module cmlx:lineCount="1" cmlx:templateRef="pspw.job">
    <scalar dataType="xsd:double" dictRef="n:totalcharge" cmlx:templateRef="totalcharge">0.0</scalar>
  </module>
  <module cmlx:lineCount="2" cmlx:templateRef="pspw.atomcompos">
    <scalar dataType="xsd:string" dictRef="n:atomcompos" cmlx:templateRef="atomcompos">Ga : 4 N : 4</scalar>
  </module>
  <module cmlx:lineCount="3" cmlx:templateRef="pspw.neclectron"/>
  <module cmlx:lineCount="1" cmlx:templateRef="pspw.supercell"/> cell_name: cell_default lattice: a1=&lt; 5.920 0.000 0.000 &gt; a2=&lt; 0.000 10.255 0.000 &gt; a3=&lt; 0.000 0.000 9.653 &gt; reciprocal: b1=&lt; 1.061 0.000 0.000 &gt; b2=&lt; 0.000 0.613 0.000 &gt; b3=&lt; 0.000 0.000 0.651 &gt; 
  <module cmlx:lineCount="3" cmlx:templateRef="nwpw.lattice" xmlns:h="http://www.w3.org/1999/xhtml">
    <list cmlx:templateRef="abc">
      <scalar dataType="xsd:double" dictRef="cc:cell.a">5.92</scalar>
      <scalar dataType="xsd:double" dictRef="cc:cell.b">10.255</scalar>
      <scalar dataType="xsd:double" dictRef="cc:cell.c">9.653</scalar>
    </list>
    <list cmlx:templateRef="alphabeta">
      <scalar dataType="xsd:double" dictRef="cc:cell.alpha">90.0</scalar>
      <scalar dataType="xsd:double" dictRef="cc:cell.beta">90.0</scalar>
      <scalar dataType="xsd:double" dictRef="cc:cell.gamma">90.0</scalar>
    </list>
  </module>
  <module cmlx:lineCount="2" cmlx:templateRef="pspw.densitycut">
    <list cmlx:templateRef="cutoff1">
      <scalar dataType="xsd:double" dictRef="n:densitycut">10.0</scalar>
      <scalar dataType="xsd:integer" dictRef="n:gridx">16</scalar>
      <scalar dataType="xsd:integer" dictRef="n:gridy">16</scalar>
      <scalar dataType="xsd:integer" dictRef="n:gridz">16</scalar>
      <scalar dataType="xsd:integer" dictRef="n:waves">446</scalar>
      <scalar dataType="xsd:integer" dictRef="n:task">112</scalar>
    </list>
    <list cmlx:templateRef="cutoff2">
      <scalar dataType="xsd:double" dictRef="n:wavefncut">10.0</scalar>
      <scalar dataType="xsd:integer" dictRef="n:gridx">16</scalar>
      <scalar dataType="xsd:integer" dictRef="n:gridy">16</scalar>
      <scalar dataType="xsd:integer" dictRef="n:gridz">16</scalar>
      <scalar dataType="xsd:integer" dictRef="n:waves">446</scalar>
      <scalar dataType="xsd:integer" dictRef="n:task">112</scalar>
    </list>
  </module>
  <module cmlx:lineCount="2" cmlx:templateRef="pspw.ewald">
    <list cmlx:templateRef="ewald">
      <scalar dataType="xsd:double" dictRef="n:ewaldrad1">1.88</scalar>
      <scalar dataType="xsd:double" dictRef="n:ewaldrad2">8.0</scalar>
    </list>
    <scalar dataType="xsd:double" dictRef="n:madelung" cmlx:templateRef="madelung">1.58898112</scalar>
  </module>
  <module cmlx:lineCount="4" cmlx:templateRef="pspw.technical">
    <list cmlx:templateRef="param1">
      <list>
        <scalar dataType="xsd:double" dictRef="n:timestep">5.8</scalar>
        <scalar dataType="xsd:double" dictRef="n:fictmass">400000.0</scalar>
      </list>
    </list>
    <list cmlx:templateRef="param2">
      <list>
        <scalar dataType="xsd:double" dictRef="n:energy.tol">1.0E-7</scalar>
        <scalar dataType="xsd:double" dictRef="n:density.tol">1.0E-7</scalar>
      </list>
    </list>
    <list cmlx:templateRef="param3">
      <list>
        <scalar dataType="xsd:integer" dictRef="n:maxiter">1000</scalar>
        <scalar dataType="xsd:integer" dictRef="n:inner">10</scalar>
        <scalar dataType="xsd:integer" dictRef="n:outer">100</scalar>
      </list>
    </list>
  </module>
</module>
  </comment>

</template>
