<?xml version="1.0" encoding="UTF-8"?>
<module templateRef="dalton.log" xmlns="http://www.xml-cml.org/schema">
  ******************************************************************
  <module lineCount="73" templateRef="proginfo">
    <list templateRef="nullId">
      <scalar dataType="xsd:string" dictRef="n:xx">*********** DALTON -
        An electronic structure program ***********</scalar>
    </list>
  </module>
  Host name : cselnx1
  <module lineCount="8" templateRef="geninpproc">
    <list templateRef="nullId">
      <scalar dataType="xsd:string" dictRef="n:line">&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;
        OUTPUT FROM GENERAL INPUT PROCESSING
        &gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;</scalar>
      <scalar dataType="xsd:string" dictRef="n:line" />
      <scalar dataType="xsd:string" dictRef="n:line" />
      <scalar dataType="xsd:string" dictRef="n:line">Default print level:
        0</scalar>
      <scalar dataType="xsd:string" dictRef="n:line" />
      <scalar dataType="xsd:string" dictRef="n:line">"Old" integral
        transformation used (limited to max 255 basis functions)
      </scalar>
      <scalar dataType="xsd:string" dictRef="n:line" />
      <scalar dataType="xsd:string" dictRef="n:line" />
    </list>
  </module>
  Chosen parameters for OPTIMI: ----------------------------- Default
  2nd order method will be used: Newton method. Optimization will be
  performed in Cartesian coordinates. Trust region method will be used
  to control step (default).
  &gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;
  &gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; 2nd Order Geometry
  Optimization &gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;
  &gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;
  *************************************************************************
  ****************** Output from HERMIT input processing
  ******************
  *************************************************************************
  <module lineCount="318" templateRef="integral">
    Starting in Integral Section -
    *************************************************************************
    ****************** Output from HERMIT input processing
    ******************
    *************************************************************************
    *************************************************************************
    ****************** Output from READIN input processing
    ******************
    *************************************************************************
    <module lineCount="7" templateRef="title">
      <list templateRef="nullId">
        <scalar dataType="xsd:string" dictRef="n:xx">Geometry
          optimization, calculation of magnetizabilities</scalar>
        <scalar dataType="xsd:string" dictRef="n:xx">and nuclear
          shieldings at the optimized geometry</scalar>
        <scalar dataType="xsd:string" dictRef="n:xx" />
        <scalar dataType="xsd:string" dictRef="n:xx" />
      </list>
    </module>
    <module lineCount="7" templateRef="symmops">
      <list templateRef="nullId">
        <scalar dataType="xsd:integer" dictRef="n:nsym">2</scalar>
      </list>
    </module>
    <module lineCount="38" templateRef="ptgroup">
      <list templateRef="nullId">
        <scalar dataType="xsd:string" dictRef="n:ptgrp">C2v</scalar>
      </list>
    </module>
    <module lineCount="13" templateRef="isotopmass">
      <list templateRef="nullId">
        <list>
          <scalar dataType="xsd:string" dictRef="n:atom">OS</scalar>
          <scalar dataType="xsd:string" dictRef="n:num" />
          <scalar dataType="xsd:double" dictRef="cc:mass">15.994915
          </scalar>
        </list>
      </list>
    </module>
    <module lineCount="20" templateRef="atombas">
      <list templateRef="nullId">
        <scalar dataType="xsd:integer" dictRef="n:ntypes">1</scalar>
      </list>
      <list templateRef="nullId">
        <scalar dataType="xsd:integer" dictRef="n:natom">3</scalar>
      </list>
      <list templateRef="nullId">
        <scalar dataType="xsd:string" dictRef="n:basisname">"aug-cc-pVDZ" from
          the basis set library.</scalar>
      </list>
      <list templateRef="nullId">
        <list>
          <scalar dataType="xsd:string" dictRef="d:label">OS</scalar>
          <scalar dataType="xsd:integer" dictRef="d:natoms">1</scalar>
          <scalar dataType="xsd:integer" dictRef="c:atnumb">8</scalar>
          <scalar dataType="xsd:integer" dictRef="d:prim">35</scalar>
          <scalar dataType="xsd:integer" dictRef="d:cont">23</scalar>
          <scalar dataType="xsd:string" dictRef="n:basis">[10s5p2d|4s3p2d]
          </scalar>
        </list>
        <list>
          <scalar dataType="xsd:string" dictRef="d:label">OP</scalar>
          <scalar dataType="xsd:integer" dictRef="d:natoms">2</scalar>
          <scalar dataType="xsd:integer" dictRef="c:atnumb">8</scalar>
          <scalar dataType="xsd:integer" dictRef="d:prim">35</scalar>
          <scalar dataType="xsd:integer" dictRef="d:cont">23</scalar>
          <scalar dataType="xsd:string" dictRef="n:basis">[10s5p2d|4s3p2d]
          </scalar>
        </list>
      </list>
      <list templateRef="nullId">
        <list>
          <scalar dataType="xsd:integer" dictRef="d:totnatoms">3</scalar>
          <scalar dataType="xsd:integer" dictRef="c:totatnumb">24</scalar>
          <scalar dataType="xsd:integer" dictRef="d:totprim">105</scalar>
          <scalar dataType="xsd:integer" dictRef="d:totcont">69</scalar>
        </list>
      </list>
      <list templateRef="nullId">
        <scalar dataType="xsd:string" dictRef="n:used">Spherical harmonic
          basis used.</scalar>
      </list>
      <list templateRef="nullId">
        <scalar dataType="xsd:double" dictRef="d:intthresh">1.0E-15</scalar>
      </list>
    </module>
    <module lineCount="18" templateRef="cartesian">
      <list templateRef="nullId">
        <scalar dataType="xsd:string" dictRef="n:xyz">Total number of
          coordinates: 9</scalar>
        <scalar dataType="xsd:string" dictRef="n:xyz" />
        <scalar dataType="xsd:string" dictRef="n:xyz">1 OS x 0.0000000000
        </scalar>
        <scalar dataType="xsd:string" dictRef="n:xyz">2 y 0.0000000000
        </scalar>
        <scalar dataType="xsd:string" dictRef="n:xyz">3 z 0.0000000000
        </scalar>
        <scalar dataType="xsd:string" dictRef="n:xyz" />
        <scalar dataType="xsd:string" dictRef="n:xyz">4 OP 1 x
          1.2634502500</scalar>
        <scalar dataType="xsd:string" dictRef="n:xyz">5 y 2.0449019100
        </scalar>
        <scalar dataType="xsd:string" dictRef="n:xyz">6 z 0.0000000000
        </scalar>
        <scalar dataType="xsd:string" dictRef="n:xyz" />
        <scalar dataType="xsd:string" dictRef="n:xyz">7 OP 2 x
          1.2634502500</scalar>
        <scalar dataType="xsd:string" dictRef="n:xyz">8 y -2.0449019100
        </scalar>
        <scalar dataType="xsd:string" dictRef="n:xyz">9 z 0.0000000000
        </scalar>
        <scalar dataType="xsd:string" dictRef="n:xyz" />
        <scalar dataType="xsd:string" dictRef="n:xyz" />
      </list>
    </module>
    <module lineCount="27" templateRef="symcoord">
      <list templateRef="nullId">
        <scalar dataType="xsd:string" dictRef="n:symmcoor">Number of
          coordinates in each symmetry: 3 3 2 1</scalar>
        <scalar dataType="xsd:string" dictRef="n:symmcoor" />
        <scalar dataType="xsd:string" dictRef="n:symmcoor">Symmetry A1 ( 1)
        </scalar>
        <scalar dataType="xsd:string" dictRef="n:symmcoor" />
        <scalar dataType="xsd:string" dictRef="n:symmcoor">1 OS x 1</scalar>
        <scalar dataType="xsd:string" dictRef="n:symmcoor">2 OP x [ 4 + 7 ]/2
        </scalar>
        <scalar dataType="xsd:string" dictRef="n:symmcoor">3 OP y [ 5 - 8 ]/2
        </scalar>
        <scalar dataType="xsd:string" dictRef="n:symmcoor" />
        <scalar dataType="xsd:string" dictRef="n:symmcoor">Symmetry B1 ( 2)
        </scalar>
        <scalar dataType="xsd:string" dictRef="n:symmcoor" />
        <scalar dataType="xsd:string" dictRef="n:symmcoor">4 OS y 2</scalar>
        <scalar dataType="xsd:string" dictRef="n:symmcoor">5 OP x [ 4 - 7 ]/2
        </scalar>
        <scalar dataType="xsd:string" dictRef="n:symmcoor">6 OP y [ 5 + 8 ]/2
        </scalar>
        <scalar dataType="xsd:string" dictRef="n:symmcoor" />
        <scalar dataType="xsd:string" dictRef="n:symmcoor">Symmetry B2 ( 3)
        </scalar>
        <scalar dataType="xsd:string" dictRef="n:symmcoor" />
        <scalar dataType="xsd:string" dictRef="n:symmcoor">7 OS z 3</scalar>
        <scalar dataType="xsd:string" dictRef="n:symmcoor">8 OP z [ 6 + 9 ]/2
        </scalar>
        <scalar dataType="xsd:string" dictRef="n:symmcoor" />
        <scalar dataType="xsd:string" dictRef="n:symmcoor">Symmetry A2 ( 4)
        </scalar>
        <scalar dataType="xsd:string" dictRef="n:symmcoor" />
        <scalar dataType="xsd:string" dictRef="n:symmcoor">9 OP z [ 6 - 9 ]/2
        </scalar>
        <scalar dataType="xsd:string" dictRef="n:symmcoor" />
        <scalar dataType="xsd:string" dictRef="n:symmcoor" />
      </list>
    </module>
    <module lineCount="14" templateRef="interatomsep">
      <list templateRef="nullId">
        <scalar dataType="xsd:string" dictRef="n:symmcoor">OS OP 1 OP 2
        </scalar>
        <scalar dataType="xsd:string" dictRef="n:symmcoor">------ ------
          ------</scalar>
        <scalar dataType="xsd:string" dictRef="n:symmcoor">OS : 0.000000
        </scalar>
        <scalar dataType="xsd:string" dictRef="n:symmcoor">OP 1: 1.272001
          0.000000</scalar>
        <scalar dataType="xsd:string" dictRef="n:symmcoor">OP 2: 1.272001
          2.164231 0.000000</scalar>
        <scalar dataType="xsd:string" dictRef="n:symmcoor" />
        <scalar dataType="xsd:string" dictRef="n:symmcoor" />
        <scalar dataType="xsd:string" dictRef="n:symmcoor">Max interatomic
          separation is 2.1642 Angstroms</scalar>
        <scalar dataType="xsd:string" dictRef="n:symmcoor">between atoms "OP
          2" and "OP 1".</scalar>
        <scalar dataType="xsd:string" dictRef="n:symmcoor" />
        <scalar dataType="xsd:string" dictRef="n:symmcoor" />
      </list>
    </module>
    <module lineCount="9" templateRef="bonddist">
      <list templateRef="nullId">
        <scalar dataType="xsd:string" dictRef="n:dist">atom 1 atom 2
          distance</scalar>
        <scalar dataType="xsd:string" dictRef="n:dist">------ ------
          --------</scalar>
        <scalar dataType="xsd:string" dictRef="n:dist">bond distance: OP 1
          OS 1.272001</scalar>
        <scalar dataType="xsd:string" dictRef="n:dist">bond distance: OP 2
          OS 1.272001</scalar>
        <scalar dataType="xsd:string" dictRef="n:dist" />
        <scalar dataType="xsd:string" dictRef="n:dist" />
      </list>
    </module>
    <module lineCount="10" templateRef="bondang">
      <list templateRef="nullId">
        <scalar dataType="xsd:string" dictRef="n:ang">atom 1 atom 2 atom
          3 angle</scalar>
        <scalar dataType="xsd:string" dictRef="n:ang">------ ------
          ------ -----</scalar>
        <scalar dataType="xsd:string" dictRef="n:ang">bond angle: OP 1 OS
          OP 2 116.580</scalar>
        <scalar dataType="xsd:string" dictRef="n:ang" />
        <scalar dataType="xsd:string" dictRef="n:ang" />
        <scalar dataType="xsd:string" dictRef="n:ang" />
        <scalar dataType="xsd:string" dictRef="n:ang" />
      </list>
    </module>
    <module lineCount="8" templateRef="momint">
      <list templateRef="nullId">
        <scalar dataType="xsd:string" dictRef="n:ang">IA 4.766606
          0.000000 1.000000 0.000000</scalar>
        <scalar dataType="xsd:string" dictRef="n:ang">IB 37.459257
          1.000000 0.000000 0.000000</scalar>
        <scalar dataType="xsd:string" dictRef="n:ang">IC 42.225862
          0.000000 0.000000 1.000000</scalar>
        <scalar dataType="xsd:string" dictRef="n:ang" />
        <scalar dataType="xsd:string" dictRef="n:ang" />
      </list>
    </module>
    <module lineCount="14" templateRef="rotconst">
      <list templateRef="nullId">
        <scalar dataType="xsd:string" dictRef="n:ang">The molecule is
          planar.</scalar>
        <scalar dataType="xsd:string" dictRef="n:ang" />
        <scalar dataType="xsd:string" dictRef="n:ang">A B C</scalar>
        <scalar dataType="xsd:string" dictRef="n:ang" />
        <scalar dataType="xsd:string" dictRef="n:ang">106024.9231
          13491.4318 11968.4709 MHz</scalar>
        <scalar dataType="xsd:string" dictRef="n:ang">3.536611 0.450026
          0.399225 cm-1</scalar>
        <scalar dataType="xsd:string" dictRef="n:ang" />
        <scalar dataType="xsd:string" dictRef="n:ang" />
        <scalar dataType="xsd:string" dictRef="n:ang">Nuclear repulsion
          energy : 68.899188090779</scalar>
        <scalar dataType="xsd:string" dictRef="n:ang" />
        <scalar dataType="xsd:string" dictRef="n:ang" />
      </list>
    </module>
    <module lineCount="93" templateRef="symmorb">
      <list templateRef="nullId">
        <scalar dataType="xsd:string" dictRef="n:ang">Number of orbitals
          in each symmetry: 27 21 12 9</scalar>
        <scalar dataType="xsd:string" dictRef="n:ang" />
        <scalar dataType="xsd:string" dictRef="n:ang" />
        <scalar dataType="xsd:string" dictRef="n:ang">Symmetry A1 ( 1)
        </scalar>
        <scalar dataType="xsd:string" dictRef="n:ang" />
        <scalar dataType="xsd:string" dictRef="n:ang">1 OS 1s 1</scalar>
        <scalar dataType="xsd:string" dictRef="n:ang">2 OS 1s 2</scalar>
        <scalar dataType="xsd:string" dictRef="n:ang">3 OS 1s 3</scalar>
        <scalar dataType="xsd:string" dictRef="n:ang">4 OS 1s 4</scalar>
        <scalar dataType="xsd:string" dictRef="n:ang">5 OS 2px 5</scalar>
        <scalar dataType="xsd:string" dictRef="n:ang">6 OS 2px 8</scalar>
        <scalar dataType="xsd:string" dictRef="n:ang">7 OS 2px 11
        </scalar>
        <scalar dataType="xsd:string" dictRef="n:ang">8 OS 3d0 16
        </scalar>
        <scalar dataType="xsd:string" dictRef="n:ang">9 OS 3d2+ 18
        </scalar>
        <scalar dataType="xsd:string" dictRef="n:ang">10 OS 3d0 21
        </scalar>
        <scalar dataType="xsd:string" dictRef="n:ang">11 OS 3d2+ 23
        </scalar>
        <scalar dataType="xsd:string" dictRef="n:ang">12 OP 1s 24 + 25
        </scalar>
        <scalar dataType="xsd:string" dictRef="n:ang">13 OP 1s 26 + 27
        </scalar>
        <scalar dataType="xsd:string" dictRef="n:ang">14 OP 1s 28 + 29
        </scalar>
        <scalar dataType="xsd:string" dictRef="n:ang">15 OP 1s 30 + 31
        </scalar>
        <scalar dataType="xsd:string" dictRef="n:ang">16 OP 2px 32 + 33
        </scalar>
        <scalar dataType="xsd:string" dictRef="n:ang">17 OP 2py 34 - 35
        </scalar>
        <scalar dataType="xsd:string" dictRef="n:ang">18 OP 2px 38 + 39
        </scalar>
        <scalar dataType="xsd:string" dictRef="n:ang">19 OP 2py 40 - 41
        </scalar>
        <scalar dataType="xsd:string" dictRef="n:ang">20 OP 2px 44 + 45
        </scalar>
        <scalar dataType="xsd:string" dictRef="n:ang">21 OP 2py 46 - 47
        </scalar>
        <scalar dataType="xsd:string" dictRef="n:ang">22 OP 3d2- 50 - 51
        </scalar>
        <scalar dataType="xsd:string" dictRef="n:ang">23 OP 3d0 54 + 55
        </scalar>
        <scalar dataType="xsd:string" dictRef="n:ang">24 OP 3d2+ 58 + 59
        </scalar>
        <scalar dataType="xsd:string" dictRef="n:ang">25 OP 3d2- 60 - 61
        </scalar>
        <scalar dataType="xsd:string" dictRef="n:ang">26 OP 3d0 64 + 65
        </scalar>
        <scalar dataType="xsd:string" dictRef="n:ang">27 OP 3d2+ 68 + 69
        </scalar>
        <scalar dataType="xsd:string" dictRef="n:ang" />
        <scalar dataType="xsd:string" dictRef="n:ang" />
        <scalar dataType="xsd:string" dictRef="n:ang">Symmetry B1 ( 2)
        </scalar>
        <scalar dataType="xsd:string" dictRef="n:ang" />
        <scalar dataType="xsd:string" dictRef="n:ang">28 OS 2py 6
        </scalar>
        <scalar dataType="xsd:string" dictRef="n:ang">29 OS 2py 9
        </scalar>
        <scalar dataType="xsd:string" dictRef="n:ang">30 OS 2py 12
        </scalar>
        <scalar dataType="xsd:string" dictRef="n:ang">31 OS 3d2- 14
        </scalar>
        <scalar dataType="xsd:string" dictRef="n:ang">32 OS 3d2- 19
        </scalar>
        <scalar dataType="xsd:string" dictRef="n:ang">33 OP 1s 24 - 25
        </scalar>
        <scalar dataType="xsd:string" dictRef="n:ang">34 OP 1s 26 - 27
        </scalar>
        <scalar dataType="xsd:string" dictRef="n:ang">35 OP 1s 28 - 29
        </scalar>
        <scalar dataType="xsd:string" dictRef="n:ang">36 OP 1s 30 - 31
        </scalar>
        <scalar dataType="xsd:string" dictRef="n:ang">37 OP 2px 32 - 33
        </scalar>
        <scalar dataType="xsd:string" dictRef="n:ang">38 OP 2py 34 + 35
        </scalar>
        <scalar dataType="xsd:string" dictRef="n:ang">39 OP 2px 38 - 39
        </scalar>
        <scalar dataType="xsd:string" dictRef="n:ang">40 OP 2py 40 + 41
        </scalar>
        <scalar dataType="xsd:string" dictRef="n:ang">41 OP 2px 44 - 45
        </scalar>
        <scalar dataType="xsd:string" dictRef="n:ang">42 OP 2py 46 + 47
        </scalar>
        <scalar dataType="xsd:string" dictRef="n:ang">43 OP 3d2- 50 + 51
        </scalar>
        <scalar dataType="xsd:string" dictRef="n:ang">44 OP 3d0 54 - 55
        </scalar>
        <scalar dataType="xsd:string" dictRef="n:ang">45 OP 3d2+ 58 - 59
        </scalar>
        <scalar dataType="xsd:string" dictRef="n:ang">46 OP 3d2- 60 + 61
        </scalar>
        <scalar dataType="xsd:string" dictRef="n:ang">47 OP 3d0 64 - 65
        </scalar>
        <scalar dataType="xsd:string" dictRef="n:ang">48 OP 3d2+ 68 - 69
        </scalar>
        <scalar dataType="xsd:string" dictRef="n:ang" />
        <scalar dataType="xsd:string" dictRef="n:ang" />
        <scalar dataType="xsd:string" dictRef="n:ang">Symmetry B2 ( 3)
        </scalar>
        <scalar dataType="xsd:string" dictRef="n:ang" />
        <scalar dataType="xsd:string" dictRef="n:ang">49 OS 2pz 7
        </scalar>
        <scalar dataType="xsd:string" dictRef="n:ang">50 OS 2pz 10
        </scalar>
        <scalar dataType="xsd:string" dictRef="n:ang">51 OS 2pz 13
        </scalar>
        <scalar dataType="xsd:string" dictRef="n:ang">52 OS 3d1+ 17
        </scalar>
        <scalar dataType="xsd:string" dictRef="n:ang">53 OS 3d1+ 22
        </scalar>
        <scalar dataType="xsd:string" dictRef="n:ang">54 OP 2pz 36 + 37
        </scalar>
        <scalar dataType="xsd:string" dictRef="n:ang">55 OP 2pz 42 + 43
        </scalar>
        <scalar dataType="xsd:string" dictRef="n:ang">56 OP 2pz 48 + 49
        </scalar>
        <scalar dataType="xsd:string" dictRef="n:ang">57 OP 3d1- 52 - 53
        </scalar>
        <scalar dataType="xsd:string" dictRef="n:ang">58 OP 3d1+ 56 + 57
        </scalar>
        <scalar dataType="xsd:string" dictRef="n:ang">59 OP 3d1- 62 - 63
        </scalar>
        <scalar dataType="xsd:string" dictRef="n:ang">60 OP 3d1+ 66 + 67
        </scalar>
        <scalar dataType="xsd:string" dictRef="n:ang" />
        <scalar dataType="xsd:string" dictRef="n:ang" />
        <scalar dataType="xsd:string" dictRef="n:ang">Symmetry A2 ( 4)
        </scalar>
        <scalar dataType="xsd:string" dictRef="n:ang" />
        <scalar dataType="xsd:string" dictRef="n:ang">61 OS 3d1- 15
        </scalar>
        <scalar dataType="xsd:string" dictRef="n:ang">62 OS 3d1- 20
        </scalar>
        <scalar dataType="xsd:string" dictRef="n:ang">63 OP 2pz 36 - 37
        </scalar>
        <scalar dataType="xsd:string" dictRef="n:ang">64 OP 2pz 42 - 43
        </scalar>
        <scalar dataType="xsd:string" dictRef="n:ang">65 OP 2pz 48 - 49
        </scalar>
        <scalar dataType="xsd:string" dictRef="n:ang">66 OP 3d1- 52 + 53
        </scalar>
        <scalar dataType="xsd:string" dictRef="n:ang">67 OP 3d1+ 56 - 57
        </scalar>
        <scalar dataType="xsd:string" dictRef="n:ang">68 OP 3d1- 62 + 63
        </scalar>
        <scalar dataType="xsd:string" dictRef="n:ang">69 OP 3d1+ 66 - 67
        </scalar>
        <scalar dataType="xsd:string" dictRef="n:ang" />
        <scalar dataType="xsd:string" dictRef="n:ang">Symmetries of
          electric field: A1 (1) B1 (2) B2 (3)</scalar>
        <scalar dataType="xsd:string" dictRef="n:ang" />
        <scalar dataType="xsd:string" dictRef="n:ang">Symmetries of
          magnetic field: A2 (4) B2 (3) B1 (2)</scalar>
      </list>
    </module>
    <module lineCount="3" templateRef="herint" />
    &gt;&gt;&gt; Time used in HUCKEL is 0.01 seconds &gt;&gt;&gt; Time
    used in ONEDRV is 0.01 seconds Number of two-electron integrals
    written: 672537 ( 23.1% ) Megabytes written: 7.702 &gt;&gt;&gt; Time
    used in TWOINT is 0.89 seconds &gt;&gt;&gt;&gt; Total CPU time used
    in HERMIT: 0.92 seconds &gt;&gt;&gt;&gt; Total wall time used in
    HERMIT: 1.00 seconds- End of Integral Section
  </module>
  <module lineCount="746" templateRef="wavefunction">
    <list templateRef="nullId">
      <scalar dataType="xsd:string" dictRef="n:xx">Starting in Wave
        Function Section -</scalar>
    </list>
  </module>
  <module lineCount="2" templateRef="info">
    <list templateRef="nullId">
      <scalar dataType="xsd:string" dictRef="n:info">INFO&gt;&gt;&gt;&gt;
        Due to convergence thresholds for the wave function</scalar>
      <scalar dataType="xsd:string" dictRef="n:info">INFO&gt;&gt;&gt;&gt;
        thresholds for convergence of geometry optimization has been
        reset</scalar>
    </list>
  </module>
  <module lineCount="5" templateRef="newthresh">
    <list templateRef="nullId">
      <scalar dataType="xsd:string" dictRef="n:gradnorm">0.00002000</scalar>
    </list>
    <list templateRef="nullId">
      <scalar dataType="xsd:string" dictRef="n:stepnorm">0.00002000</scalar>
    </list>
  </module>
  *****************************************************************
  ******** Output from **START input processing for ABACUS ********
  ***************************************************************** The
  following molecular properties will be calculated in this run:
  ------------------------------------------------------------------ The
  molecular gradient The molecular Hessian Dipole moment gradient
  Vibrational analysis Default print level: 0
  <module lineCount="419" templateRef="staticproperty">
    <list templateRef="nullId">
      <scalar dataType="xsd:string" dictRef="n:xx">Starting in Static
        Property Section -</scalar>
    </list>
  </module>
  <module lineCount="1" templateRef="predener">
    <list templateRef="nullId">
      <scalar dataType="xsd:double" dictRef="d:predener">-5.75709955787E-4
      </scalar>
    </list>
  </module>
  <module lineCount="8" templateRef="step">
    <list templateRef="nullId">
      <list>
        <scalar dataType="xsd:integer" dictRef="n:row">1</scalar>
        <scalar dataType="xsd:double" dictRef="n:col1">-0.02099389
        </scalar>
        <scalar dataType="xsd:double" dictRef="n:col2">0.00231867</scalar>
      </list>
    </list>
  </module>
  <module lineCount="6" templateRef="optimizationcontrol" />
  <module lineCount="6" templateRef="next" />
  <module lineCount="10" templateRef="optimization">
    <list templateRef="nullId">
      <list>
        <scalar dataType="xsd:string" dictRef="n:name">Iteration number
        </scalar>
        <scalar dataType="xsd:string" dictRef="n:value">0</scalar>
      </list>
      <list>
        <scalar dataType="xsd:string" dictRef="n:name">End of optimization
        </scalar>
        <scalar dataType="xsd:string" dictRef="n:value">F</scalar>
      </list>
      <list>
        <scalar dataType="xsd:string" dictRef="n:name">Energy at this
          geometry is</scalar>
        <scalar dataType="xsd:string" dictRef="n:value">-224.518524
        </scalar>
      </list>
      <list>
        <scalar dataType="xsd:string" dictRef="n:name">Norm of gradient
        </scalar>
        <scalar dataType="xsd:string" dictRef="n:value">0.018088</scalar>
      </list>
      <list>
        <scalar dataType="xsd:string" dictRef="n:name">Norm of step
        </scalar>
        <scalar dataType="xsd:string" dictRef="n:value">0.021122</scalar>
      </list>
      <list>
        <scalar dataType="xsd:string" dictRef="n:name">Updated trust
          radius</scalar>
        <scalar dataType="xsd:string" dictRef="n:value">0.500000</scalar>
      </list>
      <list>
        <scalar dataType="xsd:string" dictRef="n:name">Total Hessian index
        </scalar>
        <scalar dataType="xsd:string" dictRef="n:value">3</scalar>
      </list>
    </list>
  </module>
  <module lineCount="23" templateRef="integral">Starting in Integral Section
    -
    *************************************************************************
    ****************** Output from HERMIT input processing
    ******************
    *************************************************************************
    &gt;&gt;&gt; Time used in ONEDRV is 0.01 seconds Number of
    two-electron integrals written: 672537 ( 23.1% ) Megabytes written:
    7.702 &gt;&gt;&gt; Time used in TWOINT is 0.91 seconds
    &gt;&gt;&gt;&gt; Total CPU time used in HERMIT: 0.94 seconds
    &gt;&gt;&gt;&gt; Total wall time used in HERMIT: 1.00 seconds- End
    of Integral Section</module>
  <module lineCount="349" templateRef="wavefunction">
    <list templateRef="nullId">
      <scalar dataType="xsd:string" dictRef="n:xx">Starting in Wave
        Function Section -</scalar>
    </list>
  </module>
  Trust radius decreased due to bad ratio.
  <module lineCount="1" templateRef="trustrad">
    <list templateRef="nullId">
      <scalar dataType="xsd:double" dictRef="n:trustrad">0.01479</scalar>
    </list>
  </module>
  *****************************************************************
  ******** Output from **EACH input processing for ABACUS ********
  ***************************************************************** The
  following molecular properties will be calculated in this run:
  ------------------------------------------------------------------ The
  molecular gradient The molecular Hessian Dipole moment gradient
  Vibrational analysis Default print level: -2
  <module lineCount="187" templateRef="staticproperty">
    <list templateRef="nullId">
      <scalar dataType="xsd:string" dictRef="n:xx">Starting in Static
        Property Section -</scalar>
    </list>
  </module>
  <module lineCount="1" templateRef="predener">
    <list templateRef="nullId">
      <scalar dataType="xsd:double" dictRef="d:predener">-3.8288349183E-5
      </scalar>
    </list>
  </module>
  <module lineCount="8" templateRef="step">
    <list templateRef="nullId">
      <list>
        <scalar dataType="xsd:integer" dictRef="n:row">1</scalar>
        <scalar dataType="xsd:double" dictRef="n:col1">-0.00533354
        </scalar>
        <scalar dataType="xsd:double" dictRef="n:col2">0.00365468</scalar>
      </list>
    </list>
  </module>
  :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
  ::::::::::::::: Optimization Control Center :::::::::::::::
  :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
  <module lineCount="6" templateRef="next" />
  <module lineCount="11" templateRef="optimization">
    <list templateRef="nullId">
      <list>
        <scalar dataType="xsd:string" dictRef="n:name">Iteration number
        </scalar>
        <scalar dataType="xsd:string" dictRef="n:value">1</scalar>
      </list>
      <list>
        <scalar dataType="xsd:string" dictRef="n:name">End of optimization
        </scalar>
        <scalar dataType="xsd:string" dictRef="n:value">F</scalar>
      </list>
      <list>
        <scalar dataType="xsd:string" dictRef="n:name">Energy at this
          geometry is</scalar>
        <scalar dataType="xsd:string" dictRef="n:value">-224.518738
        </scalar>
      </list>
      <list>
        <scalar dataType="xsd:string" dictRef="n:name">Energy change from
          last geom.</scalar>
        <scalar dataType="xsd:string" dictRef="n:value">-0.000214</scalar>
      </list>
      <list>
        <scalar dataType="xsd:string" dictRef="n:name">Norm of gradient
        </scalar>
        <scalar dataType="xsd:string" dictRef="n:value">0.003659</scalar>
      </list>
      <list>
        <scalar dataType="xsd:string" dictRef="n:name">Norm of step
        </scalar>
        <scalar dataType="xsd:string" dictRef="n:value">0.006466</scalar>
      </list>
      <list>
        <scalar dataType="xsd:string" dictRef="n:name">Updated trust
          radius</scalar>
        <scalar dataType="xsd:string" dictRef="n:value">0.014785</scalar>
      </list>
      <list>
        <scalar dataType="xsd:string" dictRef="n:name">Total Hessian index
        </scalar>
        <scalar dataType="xsd:string" dictRef="n:value">3</scalar>
      </list>
    </list>
  </module>
  ***** NOTE! ***** Due to non-zero index of total Hessian, symmetry # 1
  has to be broken to minimize energy!
</module>
