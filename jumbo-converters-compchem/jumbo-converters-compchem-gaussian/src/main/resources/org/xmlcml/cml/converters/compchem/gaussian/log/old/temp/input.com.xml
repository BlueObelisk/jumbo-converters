<template id="input.com" repeat="*" pattern=".*" name="input.com"
     endPattern="\s*$\s*">
  <comment class="example.input" id="input.com.1">
#N B3LYP/6-31G(d) OPT FREQ 

CH4

0 1
C 
H 1 B1
H 1 B2 2 A1
H 1 B3 2 A2 3 D1
H 1 B4 2 A3 3 D2

B1 1.1130000
B2 1.1130002
B3 1.1130001
B4 1.1130002
A1 109.47124
A2 109.47119
D1 120.00000
A3 109.47123
D2 -120.00000
  </comment>
  <record id="junk">{X,cc:junk}</record>
  <record id="keywords">{X,cc:keywords}</record>
  <record id="junk">{X,cc:junk}</record>
  <record id="title">{X,cc:title}</record>
  <record id="junk">{X,cc:junk}</record>
  <record id="chargemult">\s*{I,x:formalCharge}{I,x:spinMultiplicity}</record>
  <record id="atom1">\s*{A,x:elementType}</record>
  <record id="atom2" repeat="*">\s*{A,x:elementType}{I,x:atomRefNum}{A,x:varName}</record>
  <record id="atom3" repeat="*">\s*{A,x:elementType}{I,x:atomRefNum}{A,x:varName}{I,x:atomRefNum}{A,x:varName}</record>
  <record id="atomn" repeat="*">\s*{A,x:elementType}{I,x:atomRefNum}{A,x:varName}{I,x:atomRefNum}{A,x:varName}{I,x:atomRefNum}{A,x:varName}</record>
  <record/>
  <record id="var" repeat="*">\s*{A,x:variable}{F,x:name}</record>
  <record id="test" repeat="*">{X,cc:test}</record>
  
  <comment class="example.output.raw" id="input.com.1">
    <module cmlx:templateRef="input.com" xmlns="http://www.xml-cml.org/schema" 
      xmlns:cmlx="http://www.xml-cml.org/schema/cmlx">
      <list cmlx:templateRef="junk">
        <scalar dataType="xsd:string" dictRef="cc:junk"/>
      </list>
      <list cmlx:templateRef="keywords">
        <scalar dataType="xsd:string" dictRef="cc:keywords">#N B3LYP/6-31G(d) OPT FREQ</scalar>
      </list>
      <list cmlx:templateRef="junk">
        <scalar dataType="xsd:string" dictRef="cc:junk"/>
      </list>
      <list cmlx:templateRef="title">
        <scalar dataType="xsd:string" dictRef="cc:title">CH4</scalar>
      </list>
      <list cmlx:templateRef="junk">
        <scalar dataType="xsd:string" dictRef="cc:junk"/>
      </list>
      <list cmlx:templateRef="chargemult">
        <list>
          <scalar dataType="xsd:integer" dictRef="x:formalCharge">0</scalar>
          <scalar dataType="xsd:integer" dictRef="x:spinMultiplicity">1</scalar>
        </list>
      </list>
      <list cmlx:templateRef="atom1">
        <scalar dataType="xsd:string" dictRef="x:elementType">C</scalar>
      </list>
      <list cmlx:templateRef="atom2">
        <list>
          <scalar dataType="xsd:string" dictRef="x:elementType">H</scalar>
          <scalar dataType="xsd:integer" dictRef="x:atomRefNum">1</scalar>
          <scalar dataType="xsd:string" dictRef="x:varName">B1</scalar>
        </list>
      </list>
      <list cmlx:templateRef="atom3">
        <list>
          <scalar dataType="xsd:string" dictRef="x:elementType">H</scalar>
          <scalar dataType="xsd:integer" dictRef="x:atomRefNum">1</scalar>
          <scalar dataType="xsd:string" dictRef="x:varName">B2</scalar>
          <scalar dataType="xsd:integer" dictRef="x:atomRefNum">2</scalar>
          <scalar dataType="xsd:string" dictRef="x:varName">A1</scalar>
        </list>
      </list>
      <list cmlx:templateRef="atomn">
        <list>
          <scalar dataType="xsd:string" dictRef="x:elementType">H</scalar>
          <scalar dataType="xsd:integer" dictRef="x:atomRefNum">1</scalar>
          <scalar dataType="xsd:string" dictRef="x:varName">B3</scalar>
          <scalar dataType="xsd:integer" dictRef="x:atomRefNum">2</scalar>
          <scalar dataType="xsd:string" dictRef="x:varName">A2</scalar>
          <scalar dataType="xsd:integer" dictRef="x:atomRefNum">3</scalar>
          <scalar dataType="xsd:string" dictRef="x:varName">D1</scalar>
        </list>
        <list>
          <scalar dataType="xsd:string" dictRef="x:elementType">H</scalar>
          <scalar dataType="xsd:integer" dictRef="x:atomRefNum">1</scalar>
          <scalar dataType="xsd:string" dictRef="x:varName">B4</scalar>
          <scalar dataType="xsd:integer" dictRef="x:atomRefNum">2</scalar>
          <scalar dataType="xsd:string" dictRef="x:varName">A3</scalar>
          <scalar dataType="xsd:integer" dictRef="x:atomRefNum">3</scalar>
          <scalar dataType="xsd:string" dictRef="x:varName">D2</scalar>
        </list>
      </list>
      <list cmlx:templateRef="var">
        <list>
          <scalar dataType="xsd:string" dictRef="x:variable">B1</scalar>
          <scalar dataType="xsd:double" dictRef="x:name">1.113</scalar>
        </list>
        <list>
          <scalar dataType="xsd:string" dictRef="x:variable">B2</scalar>
          <scalar dataType="xsd:double" dictRef="x:name">1.1130002</scalar>
        </list>
        <list>
          <scalar dataType="xsd:string" dictRef="x:variable">B3</scalar>
          <scalar dataType="xsd:double" dictRef="x:name">1.1130001</scalar>
        </list>
        <list>
          <scalar dataType="xsd:string" dictRef="x:variable">B4</scalar>
          <scalar dataType="xsd:double" dictRef="x:name">1.1130002</scalar>
        </list>
        <list>
          <scalar dataType="xsd:string" dictRef="x:variable">A1</scalar>
          <scalar dataType="xsd:double" dictRef="x:name">109.47124</scalar>
        </list>
        <list>
          <scalar dataType="xsd:string" dictRef="x:variable">A2</scalar>
          <scalar dataType="xsd:double" dictRef="x:name">109.47119</scalar>
        </list>
        <list>
          <scalar dataType="xsd:string" dictRef="x:variable">D1</scalar>
          <scalar dataType="xsd:double" dictRef="x:name">120.0</scalar>
        </list>
        <list>
          <scalar dataType="xsd:string" dictRef="x:variable">A3</scalar>
          <scalar dataType="xsd:double" dictRef="x:name">109.47123</scalar>
        </list>
        <list>
          <scalar dataType="xsd:string" dictRef="x:variable">D2</scalar>
          <scalar dataType="xsd:double" dictRef="x:name">-120.0</scalar>
        </list>
      </list>
      <list cmlx:templateRef="test">
        <scalar dataType="xsd:string" dictRef="cc:test"/>
      </list>
    </module>
  </comment>
  
</template> 
