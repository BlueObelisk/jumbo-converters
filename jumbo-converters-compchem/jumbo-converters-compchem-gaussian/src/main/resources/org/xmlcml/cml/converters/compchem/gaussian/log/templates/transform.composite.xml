<transformList
  xmlns:xi="http://www.w3.org/2001/XInclude"
  >

  <!-- move <formula> into <molecule> -->
  <transform process="moveRelative" 
             xpath=".//cml:module[@id='job']/cml:formula" 
             to="parent::cml:module[@id='job']/cml:module[@id='finalization']/cml:molecule[@id='mol9999']" />

<!--  ====================== Composite methods ===================== -->

  <transform process="pullupSingleton" 
             xpath=".//cml:module[@cmlx:templateRef='composite.summary.G3'      or
                                  @cmlx:templateRef='composite.summary.G3MP2'   or
                                  @cmlx:templateRef='composite.summary.G3B3'    or
                                  @cmlx:templateRef='composite.summary.G3MP2B3' or
                                  @cmlx:templateRef='composite.summary.G4'      or
                                  @cmlx:templateRef='composite.summary.G4MP2'   ]" />

  <transform process="moveRelative"
             xpath=".//cml:property[@cmlx:templateRef='composite.summary.G3'      or
                                    @cmlx:templateRef='composite.summary.G3B3'    or
                                    @cmlx:templateRef='composite.summary.G3MP2'   or
                                    @cmlx:templateRef='composite.summary.G3MP2B3' or
                                    @cmlx:templateRef='composite.summary.G4'      or 
                                    @cmlx:templateRef='composite.summary.G4MP2'   ]"
             to="./ancestor::*[@dictRef='cc:job']/cml:module[@id='finalization']/cml:propertyList"           />

  <!-- wrap several energy terms into a property-list -->
  <transform process="addChild"      xpath=".//cml:module[@id='job']"  
             elementName="cml:list"  dictRef="x:electronicEnergies"  position="0" />
  <transform process="moveRelative"
             xpath=".//cml:module[@id='job']/cml:scalar[
                       @dictRef='x:G3'  or @dictRef='x:G3B3'  or @dictRef='x:G3MP2'  or @dictRef='x:G3MP2B3'
                    or @dictRef='x:G4'  or @dictRef='x:G4MP2'
                    or @dictRef='x:HF/GFHFB1'  or @dictRef='x:HF/GFHFB2'  or @dictRef='x:HF/GFHFB3'  or @dictRef='x:HF/GFHFB4'
                    or @dictRef='x:HF/GTLargeXP'  or @dictRef='x:HF/GTMP2LargeXP'
                    or @dictRef='x:MP2/G3Bas1'  
                    or @dictRef='x:MP2/GTBas1'  or @dictRef='x:MP2/GTBas2'  or @dictRef='x:MP2/GTBas3'
                    or @dictRef='x:MP2/GTLarge'  or @dictRef='x:MP2/GTLargeXP'  
                    or @dictRef='x:MP2/GTMP2Large'  or @dictRef='x:MP2/GTMP2LargeXP'
                    or @dictRef='x:MP4/GTBas1'  or @dictRef='x:MP4/GTBas2'  or @dictRef='x:MP4/GTBas3'
                    or @dictRef='x:CCSD(T)/G3Bas1'  or @dictRef='x:CCSD(T)/GTBas1'
                    or @dictRef='x:QCISD(T)/G3Bas1'
             ]" 
             to="../cml:list[@dictRef='x:electronicEnergies']"/> 
  <transform process="delete" xpath=".//cml:list[@dictRef='x:electronicEnergies' and count(*)=0]" />
  <transform process="createWrapperProperty" xpath=".//*[@dictRef='x:electronicEnergies' ]"/>
  <transform process="moveRelative" xpath=".//cml:module[@id='job']/cml:property[@dictRef='x:electronicEnergies']" 
                                       to="../cml:module[@id='finalization']/cml:propertyList" />

  <!-- add DataType, unit and improve dictRef of energy terms -->
  <transform process="setDataType" value="xsd:double"
             xpath=".//cml:property[@dictRef='x:electronicEnergies']/cml:list/cml:scalar" /> 
  <transform process="addUnits" value="nonSi:hartree"
             xpath=".//cml:property[@dictRef='x:electronicEnergies']/cml:list/cml:scalar" />

  <transform process="addDictRef" xpath=".//cml:scalar[@dictRef='x:G3']"               value="g:energy(G3)" />
  <transform process="addDictRef" xpath=".//cml:scalar[@dictRef='x:G3B3']"             value="g:energy(G3B3)" />  
  <transform process="addDictRef" xpath=".//cml:scalar[@dictRef='x:G3MP2']"            value="g:energy(G3MP2)" />  
  <transform process="addDictRef" xpath=".//cml:scalar[@dictRef='x:G3MP2B3']"          value="g:energy(G3MP2B3)" />
  <transform process="addDictRef" xpath=".//cml:scalar[@dictRef='x:G4']"               value="g:energy(G4)" />  
  <transform process="addDictRef" xpath=".//cml:scalar[@dictRef='x:G4MP2']"            value="g:energy(G4MP2)" />
  <transform process="addDictRef" xpath=".//cml:scalar[@dictRef='x:HF/GFHFB1']"        value="g:energy(HF/GFHFB1)" />  
  <transform process="addDictRef" xpath=".//cml:scalar[@dictRef='x:HF/GFHFB2']"        value="g:energy(HF/GFHFB2)" />  
  <transform process="addDictRef" xpath=".//cml:scalar[@dictRef='x:HF/GFHFB3']"        value="g:energy(HF/GFHFB3)" />  
  <transform process="addDictRef" xpath=".//cml:scalar[@dictRef='x:HF/GFHFB4']"        value="g:energy(HF/GFHFB4)" />
  <transform process="addDictRef" xpath=".//cml:scalar[@dictRef='x:HF/GTLargeXP']"     value="g:energy(HF/GTLargeXP)" />  
  <transform process="addDictRef" xpath=".//cml:scalar[@dictRef='x:HF/GTMP2LargeXP']"  value="g:energy(HF/GTMP2LargeXP)" />
  <transform process="addDictRef" xpath=".//cml:scalar[@dictRef='x:MP2/G3Bas1']"       value="g:energy(MP2/G3Bas1)" />  
  <transform process="addDictRef" xpath=".//cml:scalar[@dictRef='x:MP2/GTBas1']"       value="g:energy(MP2/GTBas1)" />  
  <transform process="addDictRef" xpath=".//cml:scalar[@dictRef='x:MP2/GTBas2']"       value="g:energy(MP2/GTBas2)" />  
  <transform process="addDictRef" xpath=".//cml:scalar[@dictRef='x:MP2/GTBas3']"       value="g:energy(MP2/GTBas3)" />
  <transform process="addDictRef" xpath=".//cml:scalar[@dictRef='x:MP2/GTLarge']"      value="g:energy(MP2/GTLarge)" />  
  <transform process="addDictRef" xpath=".//cml:scalar[@dictRef='x:MP2/GTLargeXP']"    value="g:energy(MP2/GTLargeXP)" />  
  <transform process="addDictRef" xpath=".//cml:scalar[@dictRef='x:MP2/GTMP2Large']"   value="g:energy(MP2/GTMP2Large)" />  
  <transform process="addDictRef" xpath=".//cml:scalar[@dictRef='x:MP2/GTMP2LargeXP']" value="g:energy(MP2/GTMP2LargeXP)" />
  <transform process="addDictRef" xpath=".//cml:scalar[@dictRef='x:MP4/GTBas1']"       value="g:energy(MP4/GTBas1)" />  
  <transform process="addDictRef" xpath=".//cml:scalar[@dictRef='x:MP4/GTBas2']"       value="g:energy(MP4/GTBas2)" />  
  <transform process="addDictRef" xpath=".//cml:scalar[@dictRef='x:MP4/GTBas3']"       value="g:energy(MP4/GTBas3)" />
  <transform process="addDictRef" xpath=".//cml:scalar[@dictRef='x:CCSD(T)/G3Bas1']"   value="g:energy(CCSD(T)/G3Bas1)" />  
  <transform process="addDictRef" xpath=".//cml:scalar[@dictRef='x:CCSD(T)/GTBas1']"   value="g:energy(CCSD(T)/GTBas1)" />
  <transform process="addDictRef" xpath=".//cml:scalar[@dictRef='x:QCISD(T)/G3Bas1']"  value="g:energy(QCISD(T)/G3Bas1)" /> 

    



<!--Energy Terms in final (Mixed) ARCHIVE: 
Energy_ 
G3:
dictRef='x:MP2/G3Bas1'
dictRef='x:QCISD(T)/G3Bas1'
dictRef='x:MP4/GTBas1'
dictRef='x:MP2/GTBas2'
dictRef='x:MP4/GTBas2'
dictRef='x:MP2/GTBas3'
dictRef='x:MP4/GTBas3'
dictRef='x:MP2/GTLarge'
dictRef='x:G3'

G3B3:
dictRef='x:MP2/G3Bas1'
dictRef='x:QCISD(T)/G3Bas1'
dictRef='x:MP4/GTBas1'
dictRef='x:MP2/GTBas2'
dictRef='x:MP4/GTBas2'
dictRef='x:MP2/GTBas3'
dictRef='x:MP4/GTBas3'
dictRef='x:MP2/GTLarge'
dictRef='x:G3B3'

G3MP2:
dictRef='x:MP2/G3Bas1'
dictRef='x:QCISD(T)/G3Bas1'
dictRef='x:MP2/GTMP2Large'
dictRef='x:G3MP2'

G3MP2B3:
dictRef='x:MP2/G3Bas1'
dictRef='x:QCISD(T)/G3Bas1'
dictRef='x:MP2/GTMP2Large'
dictRef='x:G3MP2B3'

G4:
dictRef='x:CCSD(T)/G3Bas1'
dictRef='x:MP2/GTBas1'
dictRef='x:MP2/GTBas2'
dictRef='x:MP2/GTBas3'
dictRef='x:MP2/GTLargeXP'
dictRef='x:MP4/GTBas1'
dictRef='x:MP4/GTBas2'
dictRef='x:MP4/GTBas3'
dictRef='x:HF/GTLargeXP'
dictRef='x:HF/GFHFB1'
dictRef='x:HF/GFHFB2'
dictRef='x:G4'

G4MP2:
dictRef='x:CCSD(T)/GTBas1'
dictRef='x:MP2/GTBas1'
dictRef='x:MP2/GTBas2'
dictRef='x:MP2/GTBas3'
dictRef='x:MP2/GTMP2LargeXP'
dictRef='x:HF/GTMP2LargeXP'
dictRef='x:HF/GFHFB3'
dictRef='x:HF/GFHFB4'
dictRef='x:G4MP2'
 -->


</transformList>