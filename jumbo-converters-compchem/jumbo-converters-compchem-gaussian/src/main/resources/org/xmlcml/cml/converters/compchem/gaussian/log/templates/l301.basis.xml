<template id="l301.basis" name="basis" repeat="*"
    pattern="\s*Standard basis.*" 
    endPattern="\s*NAtoms=.*$\s*Integral buffers will be.*" endOffset="4"
    endPattern2="\s*NAtoms=.*"                              endOffset2="1">
    
  <comment class="example.input" id="l301.basis">
 Standard basis: 6-31G(d) (6D, 7F)
 There are     8 symmetry adapted basis functions of A   symmetry.
 There are     5 symmetry adapted basis functions of B1  symmetry.
 There are     5 symmetry adapted basis functions of B2  symmetry.
 There are     5 symmetry adapted basis functions of B3  symmetry.
 Integral buffers will be    262144 words long.
 Raffenetti 2 integral format.
 Two-electron integral symmetry is turned on.
    23 basis functions,    44 primitive gaussians,    23 cartesian basis functions
     5 alpha electrons        5 beta electrons
       nuclear repulsion energy        13.1577484238 Hartrees.
 NAtoms=    5 NActive=    5 NUniq=    2 SFac= 5.66D+00 NAtFMM=   60 Big=F
  </comment>
  
  <comment class="example.input" id="l301.basis.09">
 Standard basis: 3-21G (6D, 7F)
 Ernie: Thresh=  0.10000D-02 Tol=  0.10000D-05 Strict=F.
 There are     7 symmetry adapted basis functions of AG  symmetry.
 There are     0 symmetry adapted basis functions of B1G symmetry.
 There are     2 symmetry adapted basis functions of B2G symmetry.
 There are     4 symmetry adapted basis functions of B3G symmetry.
 There are     0 symmetry adapted basis functions of AU  symmetry.
 There are     7 symmetry adapted basis functions of B1U symmetry.
 There are     4 symmetry adapted basis functions of B2U symmetry.
 There are     2 symmetry adapted basis functions of B3U symmetry.
 Integral buffers will be    131072 words long.
 Raffenetti 1 integral format.
 Two-electron integral symmetry is turned on.
    26 basis functions,    42 primitive gaussians,    26 cartesian basis functions
     8 alpha electrons        8 beta electrons
       nuclear repulsion energy        33.7515964544 Hartrees.
 IExCor=    0 DFT=F Ex=HF Corr=None ExCW=0 ScaHFX=  1.000000
 ScaDFX=  1.000000  1.000000  1.000000  1.000000 ScalE2=  1.000000  1.000000
 IRadAn=      0 IRanWt=     -1 IRanGd=            0 ICorTp=0
 NAtoms=    6 NActive=    6 NUniq=    2 SFac= 4.00D+00 NAtFMM=   50 NAOKFM=F Big=F
  </comment>

  <comment class="example.input" id="l301.basis.1">
 Standard basis: 6-31G(d) (6D, 7F)
 There are    38 symmetry adapted cartesian basis functions of A   symmetry.
 There are    38 symmetry adapted basis functions of A   symmetry.
 38 basis functions,    72 primitive gaussians,    38 cartesian basis functions
 9 alpha electrons        9 beta electrons
 nuclear repulsion energy        40.7874608395 Hartrees.
 NAtoms=    6 NActive=    6 NUniq=    6 SFac= 1.00D+00 NAtFMM=   60 NAOKFM=F Big=F
 Integral buffers will be    131072 words long.
 Raffenetti 2 integral format.
 Two-electron integral symmetry is turned on.
  </comment>

  <comment class="example.input" id="l301.basis.2">
  Standard basis: 6-31G (6D, 7F)
 There are    26 symmetry adapted basis functions of A   symmetry.
 Integral buffers will be    131072 words long.
 Raffenetti 1 integral format.
 Two-electron integral symmetry is turned on.
    26 basis functions,    60 primitive gaussians,    26 cartesian basis functions
     9 alpha electrons        9 beta electrons
       nuclear repulsion energy        40.7874903619 Hartrees.
 NAtoms=    6 NActive=    6 NUniq=    6 SFac= 7.50D-01 NAtFMM=   80 NAOKFM=F Big=F
  </comment>

  <comment class="example.input" id="l301.basis.3">
    Standard basis: 6-31G (6D, 7F)
 There are    26 symmetry adapted cartesian basis functions of A   symmetry.
 There are    26 symmetry adapted basis functions of A   symmetry.
    26 basis functions,    60 primitive gaussians,    26 cartesian basis functions
     9 alpha electrons        9 beta electrons
       nuclear repulsion energy        40.7874903843 Hartrees.
 NAtoms=    6 NActive=    6 NUniq=    6 SFac= 1.00D+00 NAtFMM=   60 NAOKFM=F Big=F
 Integral buffers will be    131072 words long.
 Raffenetti 1 integral format.
 Two-electron integral symmetry is turned on.
  </comment>
  
  <record id="basis">\s*Standard basis:\s*{A,cc:basisSetLabel}\s*{X,cc:diffuse}\s*</record> 

  <templateList id="ernie">
    <template pattern="\s*Ernie.*"
              endPattern=".*" 
              id="ernie">
      <record id="ernie" repeat="*">\s*Ernie: Thresh={E,g:thresh}\s*Tol={E,g:tol}\s*Strict={A,g:strict}\.\s*</record> 
    </template>
  </templateList>
 
  <templateList id="symadnuc">
    <template id="symaddnuc" 
              pattern="\s*There are.*"                    offset="0"   
              endPattern="\s*Integral buffers.*"          endOffset="0"
              endPattern2="\s*\d+\s+basis functions.*"    endOffset2="0">
      <record id="symmadapt" repeat="*" makeArray="true">\s*There are\s+{I,cc:adapted}\s*symmetry adapted\s*\w*\s+basis functions of\s*{A,cc:symm}\s*symmetry\.\s*</record>
    </template>
  </templateList>  

  <templateList id="integral">
    <template id="integral"
              pattern="\s*Integral buffers.*"                                offset="0"
              endPattern="\s*\w+-\w+\s*integral symmetry is turned on\.\s*"  endOffset="1">
      <record id="buffer">\s*Integral buffers will be\s*{I,g:buffer}\s*words long\.\s*</record>
      <record id="raff">\s*{A,g:raffenetti}\s*{I,g:raff}\s*integral format\.\s*</record>
      <record id="twoe">\s*{X,g:twoe}\s*integral symmetry is turned on\.\s*</record>
    </template>
  </templateList>

  <templateList id="natoms">
    <template id="natoms" 
              repeat="*" 
              pattern="\s*NAtoms=.*" 
              endPattern=".*">
      <record id="natoms" repeat="*">\s*NAtoms={I,cc:natoms}\sNActive={I,cc:nactiveatoms}\sNUniq={I,cc:uniqatoms}\sSFac={E,g:sfac}\sNAtFMM={I,g:natfmm}.*\sBig={A,g:big}\s*</record> 
    </template>
  </templateList>

  <templateList id="basis">
    <template id="basis"
              repeat="*"
              pattern="\s*\d+\s+basis functions.*"        offset="0"
              endPattern="\s*nuclear repulsion energy.*"  endOffset="1">
      <record id="basiscount">\s*{I,cc:basiscount}\s*basis functions,\s*{I,g:primbasis}\s*primitive gaussians,\s*{I,cc:cartesianbasis}\s*cartesian basis functions\s*</record> 
      <record id="alphabeta">\s*{I,cc:alphae}\s*alpha electrons\s*{I,cc:betae}\s*beta electrons\s*</record> 
      <record id="nucrep">\s*nuclear repulsion energy\s*{F,cc:Energy_NucRep}\s*Hartrees\.\s*</record>
    </template>
  </templateList>

  <templateList id="misc">
    <template id="misc"
              pattern="\s*((IExCor)|(ScaDFX)|(IRadAn)).*" 
              repeat="*" 
              endPattern=".*">
      <record id="misc">\s*{X,g:misc}\s*</record> 
    </template>
  </templateList>
  
  <!-- TRANSFORMS -->
  <transform process="createTable" xpath=".//cml:list[@cmlx:templateRef='symmadapt']" />
  <transform process="addAttribute" xpath=".//cml:table[cml:arrayList/cml:array[@size='1']]" name="rows" value="1" />
  <transform process="addAttribute" xpath=".//cml:table[cml:arrayList/cml:array[@size='2']]" name="rows" value="2" />
  <transform process="addAttribute" xpath=".//cml:table[cml:arrayList/cml:array[@size='3']]" name="rows" value="3" />
  <transform process="addAttribute" xpath=".//cml:table[cml:arrayList/cml:array[@size='4']]" name="rows" value="4" />
  <transform process="addAttribute" xpath=".//cml:table[cml:arrayList/cml:array[@size='5']]" name="rows" value="5" />
  <transform process="addAttribute" xpath=".//cml:table[cml:arrayList/cml:array[@size='6']]" name="rows" value="6" />
  <transform process="addAttribute" xpath=".//cml:table[cml:arrayList/cml:array[@size='7']]" name="rows" value="7" />
  <transform process="addAttribute" xpath=".//cml:table[cml:arrayList/cml:array[@size='8']]" name="rows" value="8" />
  <transform process="addAttribute" xpath=".//cml:table" name="columns" value="2" />
  
  <transform process="pullup" xpath=".//cml:scalar | .//cml:module/cml:array | .//cml:list/cml:array" repeat="2" />
  <transform process="pullup" xpath=".//cml:module[@cmlx:templateRef='basis' or @cmlx:templateRef='integral' or @cmlx:templateRef='natoms' or @cmlx:templateRef='ernie']/cml:scalar" />

  <transform process="pullup" xpath=".//cml:module/cml:table"/>
  
  <!--  bug, pick up missed field -->  
  <transform process="createString" xpath=".//text()[starts-with(normalize-space(.),'NAtoms')]" id="scraped"/>
  <transform process="reparse" xpath=".//cml:scalar[@id='scraped']" regexPath=".//record[@id='natoms']"/>
  <transform process="pullup" xpath=".//cml:module//cml:list[cml:scalar[@dictRef='cc:natoms']]/cml:scalar" repeat='3'/>

  <transform process="addUnits" xpath=".//cml:scalar[@dictRef='cc:Energy_NucRep']" value="nonSi:hartree" />
  <transform process="createWrapperProperty" xpath=".//cml:scalar[@dictRef='cc:Energy_NucRep']" />
  
  <!--  delete empty lists -->
  <transform process="delete" xpath=".//cml:list[count(*)=0]"/>
  <transform process="delete" xpath=".//cml:list[count(*)=0]"/>
  <transform process="delete" xpath=".//cml:table[count(*)=0]"/>
  <transform process="delete" xpath=".//cml:module[count(*)=0]"/>
  <transform process="delete" xpath=".//cml:module[count(*)=0]"/>

    
  <comment class="example.output" id="l301.basis">
    <module xmlns="http://www.xml-cml.org/schema" xmlns:cmlx="http://www.xml-cml.org/schema/cmlx" cmlx:templateRef="l301.basis">
      <scalar dataType="xsd:string" dictRef="cc:basisSetLabel">6-31G(d)</scalar>
      <scalar dataType="xsd:string" dictRef="cc:diffuse">(6D, 7F)</scalar>
      <table tableType="columnBased" rows="4" columns="2">
        <arrayList>
          <array dataType="xsd:integer" dictRef="cc:adapted" size="4">8 5 5 5</array>
          <array dataType="xsd:string" dictRef="cc:symm" size="4">A B1 B2 B3</array>
        </arrayList>
      </table>
      <scalar dataType="xsd:integer" dictRef="g:buffer">262144</scalar>
      <scalar dataType="xsd:string" dictRef="g:twoe">Two-electron</scalar>
      <scalar dataType="xsd:string" dictRef="g:raffenetti">Raffenetti</scalar>
      <scalar dataType="xsd:integer" dictRef="g:raff">2</scalar>
      <property dictRef="cc:Energy_NucRep">
        <scalar dataType="xsd:double" units="nonSi:hartree">13.1577484238</scalar>
      </property>
      <scalar dataType="xsd:integer" dictRef="cc:basiscount">23</scalar>
      <scalar dataType="xsd:integer" dictRef="g:primbasis">44</scalar>
      <scalar dataType="xsd:integer" dictRef="cc:cartesianbasis">23</scalar>
      <scalar dataType="xsd:integer" dictRef="cc:alphae">5</scalar>
      <scalar dataType="xsd:integer" dictRef="cc:betae">5</scalar>
      <scalar dataType="xsd:integer" dictRef="cc:natoms">5</scalar>
      <scalar dataType="xsd:integer" dictRef="cc:nactiveatoms">5</scalar>
      <scalar dataType="xsd:integer" dictRef="cc:uniqatoms">2</scalar>
      <scalar dataType="xsd:double" dictRef="g:sfac">5.66</scalar>
      <scalar dataType="xsd:integer" dictRef="g:natfmm">60</scalar>
      <scalar dataType="xsd:string" dictRef="g:big">F</scalar>
    </module>
  </comment>
  
  <comment class="example.output" id="l301.basis.09">
    <module xmlns="http://www.xml-cml.org/schema" xmlns:cmlx="http://www.xml-cml.org/schema/cmlx" cmlx:templateRef="l301.basis">
      <scalar dataType="xsd:string" dictRef="cc:basisSetLabel">3-21G</scalar>
      <scalar dataType="xsd:string" dictRef="cc:diffuse">(6D, 7F)</scalar>
      <scalar dataType="xsd:double" dictRef="g:thresh">0.001</scalar>
      <scalar dataType="xsd:double" dictRef="g:tol">1.0E-6</scalar>
      <scalar dataType="xsd:string" dictRef="g:strict">F</scalar>
      <table tableType="columnBased" rows="8" columns="2">
        <arrayList>
          <array dataType="xsd:integer" dictRef="cc:adapted" size="8">7 0 2 4 0 7 4 2</array>
          <array dataType="xsd:string" dictRef="cc:symm" size="8">AG B1G B2G B3G AU B1U B2U B3U</array>
        </arrayList>
      </table>
      <scalar dataType="xsd:integer" dictRef="g:buffer">131072</scalar>
      <scalar dataType="xsd:string" dictRef="g:twoe">Two-electron</scalar>
      <scalar dataType="xsd:string" dictRef="g:raffenetti">Raffenetti</scalar>
      <scalar dataType="xsd:integer" dictRef="g:raff">1</scalar>
      <property dictRef="cc:Energy_NucRep">
        <scalar dataType="xsd:double" units="nonSi:hartree">33.7515964544</scalar>
      </property>
      <scalar dataType="xsd:integer" dictRef="cc:basiscount">26</scalar>
      <scalar dataType="xsd:integer" dictRef="g:primbasis">42</scalar>
      <scalar dataType="xsd:integer" dictRef="cc:cartesianbasis">26</scalar>
      <scalar dataType="xsd:integer" dictRef="cc:alphae">8</scalar>
      <scalar dataType="xsd:integer" dictRef="cc:betae">8</scalar>
      <scalar dataType="xsd:string" dictRef="g:misc">IExCor=    0 DFT=F Ex=HF Corr=None ExCW=0 ScaHFX=  1.000000</scalar>
      <scalar dataType="xsd:string" dictRef="g:misc">ScaDFX=  1.000000  1.000000  1.000000  1.000000 ScalE2=  1.000000  1.000000</scalar>
      <scalar dataType="xsd:string" dictRef="g:misc">IRadAn=      0 IRanWt=     -1 IRanGd=            0 ICorTp=0</scalar>
      <scalar dataType="xsd:integer" dictRef="cc:natoms">6</scalar>
      <scalar dataType="xsd:integer" dictRef="cc:nactiveatoms">6</scalar>
      <scalar dataType="xsd:integer" dictRef="cc:uniqatoms">2</scalar>
      <scalar dataType="xsd:double" dictRef="g:sfac">4.0</scalar>
      <scalar dataType="xsd:integer" dictRef="g:natfmm">50</scalar>
      <scalar dataType="xsd:string" dictRef="g:big">F</scalar>
    </module>
  </comment>

  <comment class="example.output" id="l301.basis.1">
    <module xmlns="http://www.xml-cml.org/schema" xmlns:cmlx="http://www.xml-cml.org/schema/cmlx" cmlx:templateRef="l301.basis">
      <scalar dataType="xsd:string" dictRef="cc:basisSetLabel">6-31G(d)</scalar>
      <scalar dataType="xsd:string" dictRef="cc:diffuse">(6D, 7F)</scalar>
      <table tableType="columnBased" rows="2" columns="2">
        <arrayList>
          <array dataType="xsd:integer" dictRef="cc:adapted" size="2">38 38</array>
          <array dataType="xsd:string" dictRef="cc:symm" size="2">A A</array>
        </arrayList>
      </table>
      <property dictRef="cc:Energy_NucRep">
        <scalar dataType="xsd:double" units="nonSi:hartree">40.7874608395</scalar>
      </property>
      <scalar dataType="xsd:integer" dictRef="cc:basiscount">38</scalar>
      <scalar dataType="xsd:integer" dictRef="g:primbasis">72</scalar>
      <scalar dataType="xsd:integer" dictRef="cc:cartesianbasis">38</scalar>
      <scalar dataType="xsd:integer" dictRef="cc:alphae">9</scalar>
      <scalar dataType="xsd:integer" dictRef="cc:betae">9</scalar>
      <scalar dataType="xsd:integer" dictRef="cc:natoms">6</scalar>
      <scalar dataType="xsd:integer" dictRef="cc:nactiveatoms">6</scalar>
      <scalar dataType="xsd:integer" dictRef="cc:uniqatoms">6</scalar>
      <scalar dataType="xsd:double" dictRef="g:sfac">1.0</scalar>
      <scalar dataType="xsd:integer" dictRef="g:natfmm">60</scalar>
      <scalar dataType="xsd:string" dictRef="g:big">F</scalar>
      <scalar dataType="xsd:integer" dictRef="g:buffer">131072</scalar>
      <scalar dataType="xsd:string" dictRef="g:twoe">Two-electron</scalar>
      <scalar dataType="xsd:string" dictRef="g:raffenetti">Raffenetti</scalar>
      <scalar dataType="xsd:integer" dictRef="g:raff">2</scalar>
    </module>
  </comment>

  <comment class="example.output" id="l301.basis.2">
    <module cmlx:templateRef="l301.basis" xmlns="http://www.xml-cml.org/schema" xmlns:cmlx="http://www.xml-cml.org/schema/cmlx">
      <scalar dataType="xsd:string" dictRef="cc:basisSetLabel">6-31G</scalar>
      <scalar dataType="xsd:string" dictRef="cc:diffuse">(6D, 7F)</scalar>
      <table tableType="columnBased" rows="1" columns="2">
        <arrayList>
          <array dataType="xsd:integer" dictRef="cc:adapted" size="1">26</array>
          <array dataType="xsd:string" dictRef="cc:symm" size="1">A</array>
        </arrayList>
      </table>
      <scalar dataType="xsd:integer" dictRef="g:buffer">131072</scalar>
      <scalar dataType="xsd:string" dictRef="g:twoe">Two-electron</scalar>
      <scalar dataType="xsd:string" dictRef="g:raffenetti">Raffenetti</scalar>
      <scalar dataType="xsd:integer" dictRef="g:raff">1</scalar>
      <property dictRef="cc:Energy_NucRep">
        <scalar dataType="xsd:double" units="nonSi:hartree">40.7874903619</scalar>
      </property>
      <scalar dataType="xsd:integer" dictRef="cc:basiscount">26</scalar>
      <scalar dataType="xsd:integer" dictRef="g:primbasis">60</scalar>
      <scalar dataType="xsd:integer" dictRef="cc:cartesianbasis">26</scalar>
      <scalar dataType="xsd:integer" dictRef="cc:alphae">9</scalar>
      <scalar dataType="xsd:integer" dictRef="cc:betae">9</scalar>
      <scalar dataType="xsd:integer" dictRef="cc:natoms">6</scalar>
      <scalar dataType="xsd:integer" dictRef="cc:nactiveatoms">6</scalar>
      <scalar dataType="xsd:integer" dictRef="cc:uniqatoms">6</scalar>
      <scalar dataType="xsd:double" dictRef="g:sfac">0.75</scalar>
      <scalar dataType="xsd:integer" dictRef="g:natfmm">80</scalar>
      <scalar dataType="xsd:string" dictRef="g:big">F</scalar>
    </module>
  </comment>

  <comment class="example.output" id="l301.basis.3">
    <module cmlx:templateRef="l301.basis" xmlns="http://www.xml-cml.org/schema" xmlns:cmlx="http://www.xml-cml.org/schema/cmlx">
      <scalar dataType="xsd:string" dictRef="cc:basisSetLabel">6-31G</scalar>
      <scalar dataType="xsd:string" dictRef="cc:diffuse">(6D, 7F)</scalar>
      <table tableType="columnBased" rows="2" columns="2">
        <arrayList>
          <array dataType="xsd:integer" dictRef="cc:adapted" size="2">26 26</array>
          <array dataType="xsd:string" dictRef="cc:symm" size="2">A A</array>
        </arrayList>
      </table>
      <property dictRef="cc:Energy_NucRep">
        <scalar dataType="xsd:double" units="nonSi:hartree">40.7874903843</scalar>
      </property>
      <scalar dataType="xsd:integer" dictRef="cc:basiscount">26</scalar>
      <scalar dataType="xsd:integer" dictRef="g:primbasis">60</scalar>
      <scalar dataType="xsd:integer" dictRef="cc:cartesianbasis">26</scalar>
      <scalar dataType="xsd:integer" dictRef="cc:alphae">9</scalar>
      <scalar dataType="xsd:integer" dictRef="cc:betae">9</scalar>
      <scalar dataType="xsd:integer" dictRef="cc:natoms">6</scalar>
      <scalar dataType="xsd:integer" dictRef="cc:nactiveatoms">6</scalar>
      <scalar dataType="xsd:integer" dictRef="cc:uniqatoms">6</scalar>
      <scalar dataType="xsd:double" dictRef="g:sfac">1.0</scalar>
      <scalar dataType="xsd:integer" dictRef="g:natfmm">60</scalar>
      <scalar dataType="xsd:string" dictRef="g:big">F</scalar>
      <scalar dataType="xsd:integer" dictRef="g:buffer">131072</scalar>
      <scalar dataType="xsd:string" dictRef="g:twoe">Two-electron</scalar>
      <scalar dataType="xsd:string" dictRef="g:raffenetti">Raffenetti</scalar>
      <scalar dataType="xsd:integer" dictRef="g:raff">1</scalar>
    </module>
  </comment>
  
</template>
 